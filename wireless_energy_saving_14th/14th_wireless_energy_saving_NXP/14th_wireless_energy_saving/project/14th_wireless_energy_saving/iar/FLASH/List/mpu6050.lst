###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       08/Jul/2019  02:43:00
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\app\device\src\mpu6050.c
#    Command line =  
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\app\device\src\mpu6050.c
#        -D LPLD_K60 -lCN
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\List
#        -lB
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\List
#        -o
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\CPU\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\common\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\LPLD\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\LPLD\HW\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\FatFs\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\FatFs\option\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\USB\common\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\USB\driver\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\USB\descriptor\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\USB\class\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\control\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\debug\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\device\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\signal\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\system\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\control\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\debug\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\device\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\signal\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\system\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\drivers\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\drivers\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\charge\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\charge\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\LPLD\FUNC\
#        -Ol -I "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\List\mpu6050.lst
#    Object file  =  
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\Obj\mpu6050.o
#
###############################################################################

D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\app\device\src\mpu6050.c
      1          /*=============================================
      2              @file         mpu6050.c
      3              @brief        惯性测量单元
      4              @programmer   Beyond Hsueh
      5          =============================================*/
      6          
      7          #include "mpu6050.h"
      8          
      9          /*===============================================================
     10                  @note      明月多情应笑我，笑我如今；
     11                             辜负春心，独自闲行独自吟。
     12                             近来怕说当时事，结编兰襟；
     13                             月浅灯深，梦里云归何处寻？
     14          ==================================================================*/     
     15          

   \                                 In section .bss, align 4
     16          float mpu_gyro_x,mpu_gyro_y,mpu_gyro_z;
   \                     mpu_gyro_x:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     mpu_gyro_y:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     mpu_gyro_z:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     17          float mpu_acce_x,mpu_acce_y,mpu_acce_z;
   \                     mpu_acce_x:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     mpu_acce_y:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     mpu_acce_z:
   \   00000000                      DS8 4
     18          
     19          //加速度计陀螺仪三轴零漂校准

   \                                 In section .bss, align 4
     20          float gf_gyro_bias_y;
   \                     gf_gyro_bias_y:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     21          float gf_gyro_bias_x;
   \                     gf_gyro_bias_x:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     22          float gf_gyro_bias_z;
   \                     gf_gyro_bias_z:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     23          float gf_acce_bias_y;
   \                     gf_acce_bias_y:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     24          float gf_acce_bias_x;
   \                     gf_acce_bias_x:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     25          float gf_acce_bias_z;
   \                     gf_acce_bias_z:
   \   00000000                      DS8 4
     26          
     27          /*===============================================================
     28          	@brief     mpu6050初始化函数
     29          ==================================================================*/

   \                                 In section .text, align 2, keep-with-next
     30          void MPU6050_Init()
     31          {   
   \                     MPU6050_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     32              I2C_WriteReg(MPU6050_I2C_ADDRESS, PWR_MGMT_1,0x00);    //解除休眠状态
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0x216B             MOVS     R1,#+107
   \   00000006   0x20D0             MOVS     R0,#+208
   \   00000008   0x.... 0x....      BL       GPIO_I2C_Write_1
     33              I2C_WriteReg(MPU6050_I2C_ADDRESS, SMPLRT_DIV,0x00);    //陀螺仪采样率，典型值：0x07(125Hz)
   \   0000000C   0x2200             MOVS     R2,#+0
   \   0000000E   0x2119             MOVS     R1,#+25
   \   00000010   0x20D0             MOVS     R0,#+208
   \   00000012   0x.... 0x....      BL       GPIO_I2C_Write_1
     34              I2C_WriteReg(MPU6050_I2C_ADDRESS, CONFIG,0x00);        //低通滤波频率，典型值：0x06(5Hz)
   \   00000016   0x2200             MOVS     R2,#+0
   \   00000018   0x211A             MOVS     R1,#+26
   \   0000001A   0x20D0             MOVS     R0,#+208
   \   0000001C   0x.... 0x....      BL       GPIO_I2C_Write_1
     35              I2C_WriteReg(MPU6050_I2C_ADDRESS, GYRO_CONFIG,0x08);   //陀螺仪自检及测量范围，典型值：0x18(不自检，2000deg/s)
   \   00000020   0x2208             MOVS     R2,#+8
   \   00000022   0x211B             MOVS     R1,#+27
   \   00000024   0x20D0             MOVS     R0,#+208
   \   00000026   0x.... 0x....      BL       GPIO_I2C_Write_1
     36              I2C_WriteReg(MPU6050_I2C_ADDRESS, ACCEL_CONFIG,0x00);  //加速计自检、测量范围及高通滤波频率，典型值：0x01(不自检，2G，5Hz)
   \   0000002A   0x2200             MOVS     R2,#+0
   \   0000002C   0x211C             MOVS     R1,#+28
   \   0000002E   0x20D0             MOVS     R0,#+208
   \   00000030   0x.... 0x....      BL       GPIO_I2C_Write_1
     37          }
   \   00000034   0xBD01             POP      {R0,PC}          ;; return
     38          
     39          /*===============================================================
     40          	@brief     获取陀螺仪三轴数值
     41          ==================================================================*/

   \                                 In section .text, align 2, keep-with-next
     42          void Get_Gyro_All()
     43          {
   \                     Get_Gyro_All: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     44              static uint8 gyro[6] = {0};
     45              
     46              GPIO_I2C_Read_N(MPU6050_I2C_ADDRESS, GYRO_XOUT_H, gyro, 6);
   \   00000002   0x2306             MOVS     R3,#+6
   \   00000004   0x.... 0x....      LDR.W    R2,??DataTable8
   \   00000008   0x2143             MOVS     R1,#+67
   \   0000000A   0x20D0             MOVS     R0,#+208
   \   0000000C   0x.... 0x....      BL       GPIO_I2C_Read_N
     47              
     48              mpu_gyro_x = ((int16)((int16)gyro[0]<<8 | gyro[1]));
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable8
   \   00000014   0x7800             LDRB     R0,[R0, #+0]
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable8
   \   0000001A   0x7849             LDRB     R1,[R1, #+1]
   \   0000001C   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   00000020   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000022   0x.... 0x....      BL       __aeabi_i2f
   \   00000026   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   0000002A   0x6008             STR      R0,[R1, #+0]
     49              mpu_gyro_y = ((int16)((int16)gyro[2]<<8 | gyro[3]));
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable8
   \   00000030   0x7880             LDRB     R0,[R0, #+2]
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable8
   \   00000036   0x78C9             LDRB     R1,[R1, #+3]
   \   00000038   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   0000003C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000003E   0x.... 0x....      BL       __aeabi_i2f
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   00000046   0x6008             STR      R0,[R1, #+0]
     50              mpu_gyro_z = ((int16)((int16)gyro[4]<<8 | gyro[5]));     //0.01526=1000/65536
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable8
   \   0000004C   0x7900             LDRB     R0,[R0, #+4]
   \   0000004E   0x.... 0x....      LDR.W    R1,??DataTable8
   \   00000052   0x7949             LDRB     R1,[R1, #+5]
   \   00000054   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   00000058   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000005A   0x.... 0x....      BL       __aeabi_i2f
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable8_3
   \   00000062   0x6008             STR      R0,[R1, #+0]
     51          }
   \   00000064   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 4
   \                     `Get_Gyro_All::gyro`:
   \   00000000                      DS8 8
     52          

   \                                 In section .text, align 2, keep-with-next
     53          void Get_Gyro_X()
     54          {  
   \                     Get_Gyro_X: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     55              uint8 gyro_x_data[2] = {0};
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0xF8AD 0x0000      STRH     R0,[SP, #+0]
     56              GPIO_I2C_Read_N(MPU6050_I2C_ADDRESS, GYRO_XOUT_H, gyro_x_data, 2);
   \   00000008   0x2302             MOVS     R3,#+2
   \   0000000A   0x466A             MOV      R2,SP
   \   0000000C   0x2143             MOVS     R1,#+67
   \   0000000E   0x20D0             MOVS     R0,#+208
   \   00000010   0x.... 0x....      BL       GPIO_I2C_Read_N
     57              mpu_gyro_x = ((int16)((int16)gyro_x_data[0]<<8 | gyro_x_data[1]))*GYR_RATIO - gf_gyro_bias_x;//0.0305=2000/65536
   \   00000014   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000018   0xF89D 0x1001      LDRB     R1,[SP, #+1]
   \   0000001C   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   00000020   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000022   0x.... 0x....      BL       __aeabi_i2d
   \   00000026   0x.... 0x....      LDR.W    R2,??DataTable8_4  ;; 0xeb851eb8
   \   0000002A   0x.... 0x....      LDR.W    R3,??DataTable8_5  ;; 0x3f8eb851
   \   0000002E   0x.... 0x....      BL       __aeabi_dmul
   \   00000032   0x0004             MOVS     R4,R0
   \   00000034   0x000D             MOVS     R5,R1
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable8_6
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0x.... 0x....      BL       __aeabi_f2d
   \   00000040   0x0002             MOVS     R2,R0
   \   00000042   0x000B             MOVS     R3,R1
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0x0029             MOVS     R1,R5
   \   00000048   0x.... 0x....      BL       __aeabi_dsub
   \   0000004C   0x.... 0x....      BL       __aeabi_d2f
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   00000054   0x6008             STR      R0,[R1, #+0]
     58          
     59          }
   \   00000056   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     60          

   \                                 In section .text, align 2, keep-with-next
     61          void Get_Gyro_Y()
     62          {
   \                     Get_Gyro_Y: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     63              uint8 gyro_y_data[2] = {0};
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0xF8AD 0x0000      STRH     R0,[SP, #+0]
     64              GPIO_I2C_Read_N(MPU6050_I2C_ADDRESS, GYRO_YOUT_H, gyro_y_data, 2);
   \   00000008   0x2302             MOVS     R3,#+2
   \   0000000A   0x466A             MOV      R2,SP
   \   0000000C   0x2145             MOVS     R1,#+69
   \   0000000E   0x20D0             MOVS     R0,#+208
   \   00000010   0x.... 0x....      BL       GPIO_I2C_Read_N
     65              mpu_gyro_y = ((int16)((int16)gyro_y_data[0]<<8 | gyro_y_data[1]))*GYR_RATIO - gf_gyro_bias_y;//0.0305=2000/65536
   \   00000014   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000018   0xF89D 0x1001      LDRB     R1,[SP, #+1]
   \   0000001C   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   00000020   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000022   0x.... 0x....      BL       __aeabi_i2d
   \   00000026   0x.... 0x....      LDR.W    R2,??DataTable8_4  ;; 0xeb851eb8
   \   0000002A   0x.... 0x....      LDR.W    R3,??DataTable8_5  ;; 0x3f8eb851
   \   0000002E   0x.... 0x....      BL       __aeabi_dmul
   \   00000032   0x0004             MOVS     R4,R0
   \   00000034   0x000D             MOVS     R5,R1
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable8_7
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0x.... 0x....      BL       __aeabi_f2d
   \   00000040   0x0002             MOVS     R2,R0
   \   00000042   0x000B             MOVS     R3,R1
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0x0029             MOVS     R1,R5
   \   00000048   0x.... 0x....      BL       __aeabi_dsub
   \   0000004C   0x.... 0x....      BL       __aeabi_d2f
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   00000054   0x6008             STR      R0,[R1, #+0]
     66          }
   \   00000056   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     67          

   \                                 In section .text, align 2, keep-with-next
     68          void Get_Gyro_Z()
     69          {
   \                     Get_Gyro_Z: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     70              uint8 gyro_z_data[2] = {0};
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0xF8AD 0x0000      STRH     R0,[SP, #+0]
     71              GPIO_I2C_Read_N(MPU6050_I2C_ADDRESS, GYRO_ZOUT_H, gyro_z_data, 2);
   \   00000008   0x2302             MOVS     R3,#+2
   \   0000000A   0x466A             MOV      R2,SP
   \   0000000C   0x2147             MOVS     R1,#+71
   \   0000000E   0x20D0             MOVS     R0,#+208
   \   00000010   0x.... 0x....      BL       GPIO_I2C_Read_N
     72              mpu_gyro_z = ((int16)((int16)gyro_z_data[0]<<8 | gyro_z_data[1]))*GYR_RATIO - gf_gyro_bias_z;//0.0305=2000/65536
   \   00000014   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000018   0xF89D 0x1001      LDRB     R1,[SP, #+1]
   \   0000001C   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   00000020   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000022   0x.... 0x....      BL       __aeabi_i2d
   \   00000026   0x.... 0x....      LDR.W    R2,??DataTable8_4  ;; 0xeb851eb8
   \   0000002A   0x.... 0x....      LDR.W    R3,??DataTable8_5  ;; 0x3f8eb851
   \   0000002E   0x.... 0x....      BL       __aeabi_dmul
   \   00000032   0x0004             MOVS     R4,R0
   \   00000034   0x000D             MOVS     R5,R1
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable8_8
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0x.... 0x....      BL       __aeabi_f2d
   \   00000040   0x0002             MOVS     R2,R0
   \   00000042   0x000B             MOVS     R3,R1
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0x0029             MOVS     R1,R5
   \   00000048   0x.... 0x....      BL       __aeabi_dsub
   \   0000004C   0x.... 0x....      BL       __aeabi_d2f
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable8_3
   \   00000054   0x6008             STR      R0,[R1, #+0]
     73          }
   \   00000056   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     74          
     75          /*===============================================================
     76          	@brief     获取加速度计三轴数值
     77          ==================================================================*/

   \                                 In section .text, align 2, keep-with-next
     78          void Get_Acc_All()
     79          {
   \                     Get_Acc_All: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
     80              uint8 acce[6] = {0};
   \   00000004   0x4668             MOV      R0,SP
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0xE9C0 0x1200      STRD     R1,R2,[R0, #+0]
     81              GPIO_I2C_Read_N(MPU6050_I2C_ADDRESS, ACCEL_XOUT_H, acce, 6);
   \   0000000E   0x2306             MOVS     R3,#+6
   \   00000010   0x466A             MOV      R2,SP
   \   00000012   0x213B             MOVS     R1,#+59
   \   00000014   0x20D0             MOVS     R0,#+208
   \   00000016   0x.... 0x....      BL       GPIO_I2C_Read_N
     82              mpu_acce_x = ((int16)((int16)acce[0]<<8 | acce[1]));
   \   0000001A   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   0000001E   0xF89D 0x1001      LDRB     R1,[SP, #+1]
   \   00000022   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   00000026   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000028   0x.... 0x....      BL       __aeabi_i2f
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable8_9
   \   00000030   0x6008             STR      R0,[R1, #+0]
     83              mpu_acce_y = ((int16)((int16)acce[2]<<8 | acce[3]));
   \   00000032   0xF89D 0x0002      LDRB     R0,[SP, #+2]
   \   00000036   0xF89D 0x1003      LDRB     R1,[SP, #+3]
   \   0000003A   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   0000003E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000040   0x.... 0x....      BL       __aeabi_i2f
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable8_10
   \   00000048   0x6008             STR      R0,[R1, #+0]
     84              mpu_acce_z = ((int16)((int16)acce[4]<<8 | acce[5]));
   \   0000004A   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \   0000004E   0xF89D 0x1005      LDRB     R1,[SP, #+5]
   \   00000052   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   00000056   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000058   0x.... 0x....      BL       __aeabi_i2f
   \   0000005C   0x.... 0x....      LDR.W    R1,??DataTable8_11
   \   00000060   0x6008             STR      R0,[R1, #+0]
     85          }
   \   00000062   0xBD07             POP      {R0-R2,PC}       ;; return
     86          

   \                                 In section .text, align 2, keep-with-next
     87          void Get_Acc_X()
     88          {
   \                     Get_Acc_X: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     89              uint8 acce_x_data[2] = {0};
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0xF8AD 0x0000      STRH     R0,[SP, #+0]
     90              GPIO_I2C_Read_N(MPU6050_I2C_ADDRESS, ACCEL_XOUT_H, acce_x_data, 2);
   \   00000008   0x2302             MOVS     R3,#+2
   \   0000000A   0x466A             MOV      R2,SP
   \   0000000C   0x213B             MOVS     R1,#+59
   \   0000000E   0x20D0             MOVS     R0,#+208
   \   00000010   0x.... 0x....      BL       GPIO_I2C_Read_N
     91              mpu_acce_x = (float)((int16)((int16)acce_x_data[0]<<8 | acce_x_data[1]));//0.0024=2*8*9.8/65536
   \   00000014   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000018   0xF89D 0x1001      LDRB     R1,[SP, #+1]
   \   0000001C   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   00000020   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000022   0x.... 0x....      BL       __aeabi_i2f
   \   00000026   0x.... 0x....      LDR.W    R1,??DataTable8_9
   \   0000002A   0x6008             STR      R0,[R1, #+0]
     92          }
   \   0000002C   0xBD01             POP      {R0,PC}          ;; return
     93          

   \                                 In section .text, align 2, keep-with-next
     94          void Get_Acc_Y()
     95          {    
   \                     Get_Acc_Y: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     96              uint8 acce_y_data[2] = {0};
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0xF8AD 0x0000      STRH     R0,[SP, #+0]
     97              GPIO_I2C_Read_N(MPU6050_I2C_ADDRESS, ACCEL_YOUT_H, acce_y_data, 2);
   \   00000008   0x2302             MOVS     R3,#+2
   \   0000000A   0x466A             MOV      R2,SP
   \   0000000C   0x213D             MOVS     R1,#+61
   \   0000000E   0x20D0             MOVS     R0,#+208
   \   00000010   0x.... 0x....      BL       GPIO_I2C_Read_N
     98              mpu_acce_y = (float)((int16)((int16)acce_y_data[0]<<8 | acce_y_data[1]));
   \   00000014   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000018   0xF89D 0x1001      LDRB     R1,[SP, #+1]
   \   0000001C   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   00000020   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000022   0x.... 0x....      BL       __aeabi_i2f
   \   00000026   0x.... 0x....      LDR.W    R1,??DataTable8_10
   \   0000002A   0x6008             STR      R0,[R1, #+0]
     99          }
   \   0000002C   0xBD01             POP      {R0,PC}          ;; return
    100          

   \                                 In section .text, align 2, keep-with-next
    101          void Get_Acc_Z()
    102          {
   \                     Get_Acc_Z: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    103              uint8 acce_z_data[2] = {0};
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    104              GPIO_I2C_Read_N(MPU6050_I2C_ADDRESS, ACCEL_ZOUT_H, acce_z_data, 2);
   \   00000008   0x2302             MOVS     R3,#+2
   \   0000000A   0x466A             MOV      R2,SP
   \   0000000C   0x213F             MOVS     R1,#+63
   \   0000000E   0x20D0             MOVS     R0,#+208
   \   00000010   0x.... 0x....      BL       GPIO_I2C_Read_N
    105              mpu_acce_z = (float)((int16)((int16)acce_z_data[0]<<8 | acce_z_data[1]));
   \   00000014   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000018   0xF89D 0x1001      LDRB     R1,[SP, #+1]
   \   0000001C   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   00000020   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000022   0x.... 0x....      BL       __aeabi_i2f
   \   00000026   0x....             LDR.N    R1,??DataTable8_11
   \   00000028   0x6008             STR      R0,[R1, #+0]
    106          }
   \   0000002A   0xBD01             POP      {R0,PC}          ;; return
    107          
    108          /*===============================================================
    109          	@brief     消除零漂误差
    110          ==================================================================*/

   \                                 In section .text, align 2, keep-with-next
    111          void GYRO_Set_Zero()
    112          {
   \                     GYRO_Set_Zero: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0xB0CE             SUB      SP,SP,#+312
    113              int16 gyro_buff[3][GYRO_BUFF_SIZE];//一次采集20个数据，分组处理
    114              int32 gyro_aver[3];//平均值
    115              int16 acce_data[3];//缓存
    116              int32 acce_aver[3];//平均值
    117              int32 gyro_S2[3];//方差
    118              float gyro_zero_temp[3];
    119              float acce_zero_temp[3];
    120              int16 err_temp = 0;
   \   00000006   0x2000             MOVS     R0,#+0
    121              int16 i=0, j=0, k = 0;
   \   00000008   0x2700             MOVS     R7,#+0
   \   0000000A   0xF05F 0x0800      MOVS     R8,#+0
   \   0000000E   0x2600             MOVS     R6,#+0
    122              int16 zero_counter = 0;
   \   00000010   0x2400             MOVS     R4,#+0
    123              uint8 button_value = 0;
   \   00000012   0x2000             MOVS     R0,#+0
    124              uint8 exit_flag = 0;
   \   00000014   0x2500             MOVS     R5,#+0
    125          //    int8 s[30];
    126              
    127              oled_fill(0x00);
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x.... 0x....      BL       oled_fill
    128          //    oled_display_16x8str(0,0,"GYRO SET ZERO...");
    129          //    oled_display_6x8str(0,3,"S2");
    130          //    oled_display_6x8str(0,5,"ZERO");
    131              gyro_zero_temp[0] = 0;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x9006             STR      R0,[SP, #+24]
    132              gyro_zero_temp[1] = 0;
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x9007             STR      R0,[SP, #+28]
    133              gyro_zero_temp[2] = 0;
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x9008             STR      R0,[SP, #+32]
    134              acce_zero_temp[0] = 0;
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x9003             STR      R0,[SP, #+12]
    135              acce_zero_temp[1] = 0;
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x9004             STR      R0,[SP, #+16]
    136              acce_zero_temp[2] = 0;
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x9005             STR      R0,[SP, #+20]
   \   00000034   0xE005             B.N      ??GYRO_Set_Zero_0
    137                
    138              while(k<1000)
    139              {
    140                  k++;
    141          
    142                  for(j=0;j<3;j++)
    143                  {
    144                      gyro_aver[j] = 0;
    145                      gyro_S2[j] = 0;
    146                      acce_aver[j] = 0;
    147                  }
    148                  for(i=0;i<GYRO_BUFF_SIZE;i++)   
    149                  {
    150                      while(!sleep_ms(1,2));      //延时，稳定采样周期1ms，采样周期太小不利于判别姿态
    151                      
    152                          Get_Gyro_All();
    153                          Get_Acc_All();
    154          
    155                        
    156                          gyro_buff[0][i] = (int16)mpu_gyro_x;
    157                          gyro_buff[1][i] = (int16)mpu_gyro_y;
    158                          gyro_buff[2][i] = (int16)mpu_gyro_z;
    159                          acce_data[0] = (int16)mpu_acce_x;
    160                          acce_data[1] = (int16)mpu_acce_y;
    161                          acce_data[2] = (int16)mpu_acce_z;
    162                          
    163                          
    164                          gyro_aver[0] += gyro_buff[0][i];
    165                          gyro_aver[1] += gyro_buff[1][i];
    166                          gyro_aver[2] += gyro_buff[2][i];
    167                          acce_aver[0] += acce_data[0];
    168                          acce_aver[1] += acce_data[1];
    169                          acce_aver[2] += acce_data[2];
    170                          
    171          //            button_value = button_scan();
    172          //            if(button_value == FIVE_DIR_OK)
    173          //            {
    174          //                exit_flag = 1;
    175          //            }
    176                        button_value = get_infrared_command();
    177                        if(button_value == COMMAND_POWER)
    178                        {
    179                          exit_flag = 1;
    180                        }
    181                
    182                  }
    183                  for(j=0;j<3;j++)        //计算方差
    184                  {
    185                      gyro_aver[j] /= GYRO_BUFF_SIZE;
    186                      acce_aver[j] /= GYRO_BUFF_SIZE;
    187                      for(i=0;i<GYRO_BUFF_SIZE;i++)
    188                      {
    189                          err_temp = gyro_buff[j][i] - gyro_aver[j];
    190                          gyro_S2[j] += err_temp * err_temp;
    191                      }
    192                      gyro_S2[j] /= GYRO_BUFF_SIZE;   
    193                  }
    194                  if((gyro_S2[0]<400)        //三轴方差均较小，说明车姿态稳定，可以调零
    195                     &&(gyro_S2[1]<400)
    196                     &&(gyro_S2[2]<400))
    197                  {
    198                      for(j=0;j<3;j++)
    199                      {
    200                          gyro_zero_temp[j] += gyro_aver[j];
    201                          acce_zero_temp[j] += acce_aver[j];
    202                      }    
    203                      zero_counter++;
    204                  }
    205                  if(zero_counter>=12)
    206                  {
    207                      //oled_display_16x8str(0,0,"SET ZERO SUCCESS!");
    208                      for(j=0;j<3;j++)
    209                      {
    210                          gyro_zero_temp[j] /= zero_counter;
    211                          acce_zero_temp[j] /= zero_counter;
    212                      }
    213                      gf_gyro_bias_x = gyro_zero_temp[0] * GYR_RATIO;
    214                      gf_gyro_bias_y = gyro_zero_temp[1] * GYR_RATIO;
    215                      gf_gyro_bias_z = gyro_zero_temp[2] * GYR_RATIO;
    216                      gf_acce_bias_x = acce_zero_temp[0];
    217                      gf_acce_bias_y = acce_zero_temp[1];
    218                      gf_acce_bias_z = acce_zero_temp[2];
    219                      
    220                      guc_gyro_zero_flag = ON;
    221                          
    222                      break;
    223                  }
    224                  else if(exit_flag)
    225                  {
    226                      //oled_display_16x8str(0,0,"SET ZERO ABROATED!");
    227                      break;
    228                  }
    229                  
    230                  oled_display_chinese(30, 3, PERFECT_MAKING, LOW_LIGHT_MODE);//止于至善
   \                     ??GYRO_Set_Zero_1: (+1)
   \   00000036   0x2300             MOVS     R3,#+0
   \   00000038   0x2207             MOVS     R2,#+7
   \   0000003A   0x2103             MOVS     R1,#+3
   \   0000003C   0x201E             MOVS     R0,#+30
   \   0000003E   0x.... 0x....      BL       oled_display_chinese
   \                     ??GYRO_Set_Zero_0: (+1)
   \   00000042   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   00000044   0xF5B6 0x7F7A      CMP      R6,#+1000
   \   00000048   0xF280 0x817E      BGE.W    ??GYRO_Set_Zero_2
   \   0000004C   0x1C76             ADDS     R6,R6,#+1
   \   0000004E   0xF05F 0x0800      MOVS     R8,#+0
   \   00000052   0xE013             B.N      ??GYRO_Set_Zero_3
   \                     ??GYRO_Set_Zero_4: (+1)
   \   00000054   0x2000             MOVS     R0,#+0
   \   00000056   0x4669             MOV      R1,SP
   \   00000058   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000005C   0xF841 0x0028      STR      R0,[R1, R8, LSL #+2]
   \   00000060   0x2000             MOVS     R0,#+0
   \   00000062   0xA90E             ADD      R1,SP,#+56
   \   00000064   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000068   0xF841 0x0028      STR      R0,[R1, R8, LSL #+2]
   \   0000006C   0x2000             MOVS     R0,#+0
   \   0000006E   0xA909             ADD      R1,SP,#+36
   \   00000070   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000074   0xF841 0x0028      STR      R0,[R1, R8, LSL #+2]
   \   00000078   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??GYRO_Set_Zero_3: (+1)
   \   0000007C   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000080   0xF1B8 0x0F03      CMP      R8,#+3
   \   00000084   0xDBE6             BLT.N    ??GYRO_Set_Zero_4
   \   00000086   0x2700             MOVS     R7,#+0
   \   00000088   0xE06C             B.N      ??GYRO_Set_Zero_5
   \                     ??GYRO_Set_Zero_6: (+1)
   \   0000008A   0x2102             MOVS     R1,#+2
   \   0000008C   0x2001             MOVS     R0,#+1
   \   0000008E   0x.... 0x....      BL       sleep_ms
   \   00000092   0x2800             CMP      R0,#+0
   \   00000094   0xD0F9             BEQ.N    ??GYRO_Set_Zero_6
   \   00000096   0x.... 0x....      BL       Get_Gyro_All
   \   0000009A   0x.... 0x....      BL       Get_Acc_All
   \   0000009E   0x....             LDR.N    R0,??DataTable8_1
   \   000000A0   0x6800             LDR      R0,[R0, #+0]
   \   000000A2   0x.... 0x....      BL       __aeabi_f2iz
   \   000000A6   0xA911             ADD      R1,SP,#+68
   \   000000A8   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000000AA   0xF821 0x0017      STRH     R0,[R1, R7, LSL #+1]
   \   000000AE   0x....             LDR.N    R0,??DataTable8_2
   \   000000B0   0x6800             LDR      R0,[R0, #+0]
   \   000000B2   0x.... 0x....      BL       __aeabi_f2iz
   \   000000B6   0xA911             ADD      R1,SP,#+68
   \   000000B8   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000000BA   0xEB01 0x0147      ADD      R1,R1,R7, LSL #+1
   \   000000BE   0xF8A1 0x0050      STRH     R0,[R1, #+80]
   \   000000C2   0x....             LDR.N    R0,??DataTable8_3
   \   000000C4   0x6800             LDR      R0,[R0, #+0]
   \   000000C6   0x.... 0x....      BL       __aeabi_f2iz
   \   000000CA   0xA911             ADD      R1,SP,#+68
   \   000000CC   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000000CE   0xEB01 0x0147      ADD      R1,R1,R7, LSL #+1
   \   000000D2   0xF8A1 0x00A0      STRH     R0,[R1, #+160]
   \   000000D6   0x....             LDR.N    R0,??DataTable8_9
   \   000000D8   0x6800             LDR      R0,[R0, #+0]
   \   000000DA   0x.... 0x....      BL       __aeabi_f2iz
   \   000000DE   0xF8AD 0x0030      STRH     R0,[SP, #+48]
   \   000000E2   0x....             LDR.N    R0,??DataTable8_10
   \   000000E4   0x6800             LDR      R0,[R0, #+0]
   \   000000E6   0x.... 0x....      BL       __aeabi_f2iz
   \   000000EA   0xF8AD 0x0032      STRH     R0,[SP, #+50]
   \   000000EE   0x....             LDR.N    R0,??DataTable8_11
   \   000000F0   0x6800             LDR      R0,[R0, #+0]
   \   000000F2   0x.... 0x....      BL       __aeabi_f2iz
   \   000000F6   0xF8AD 0x0034      STRH     R0,[SP, #+52]
   \   000000FA   0x9800             LDR      R0,[SP, #+0]
   \   000000FC   0xA911             ADD      R1,SP,#+68
   \   000000FE   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000100   0xF931 0x1017      LDRSH    R1,[R1, R7, LSL #+1]
   \   00000104   0xFA00 0xF081      SXTAH    R0,R0,R1
   \   00000108   0x9000             STR      R0,[SP, #+0]
   \   0000010A   0x9801             LDR      R0,[SP, #+4]
   \   0000010C   0xA911             ADD      R1,SP,#+68
   \   0000010E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000110   0xEB01 0x0147      ADD      R1,R1,R7, LSL #+1
   \   00000114   0xF9B1 0x1050      LDRSH    R1,[R1, #+80]
   \   00000118   0xFA00 0xF081      SXTAH    R0,R0,R1
   \   0000011C   0x9001             STR      R0,[SP, #+4]
   \   0000011E   0x9802             LDR      R0,[SP, #+8]
   \   00000120   0xA911             ADD      R1,SP,#+68
   \   00000122   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000124   0xEB01 0x0147      ADD      R1,R1,R7, LSL #+1
   \   00000128   0xF9B1 0x10A0      LDRSH    R1,[R1, #+160]
   \   0000012C   0xFA00 0xF081      SXTAH    R0,R0,R1
   \   00000130   0x9002             STR      R0,[SP, #+8]
   \   00000132   0x9809             LDR      R0,[SP, #+36]
   \   00000134   0xF9BD 0x1030      LDRSH    R1,[SP, #+48]
   \   00000138   0xFA00 0xF081      SXTAH    R0,R0,R1
   \   0000013C   0x9009             STR      R0,[SP, #+36]
   \   0000013E   0x980A             LDR      R0,[SP, #+40]
   \   00000140   0xF9BD 0x1032      LDRSH    R1,[SP, #+50]
   \   00000144   0xFA00 0xF081      SXTAH    R0,R0,R1
   \   00000148   0x900A             STR      R0,[SP, #+40]
   \   0000014A   0x980B             LDR      R0,[SP, #+44]
   \   0000014C   0xF9BD 0x1034      LDRSH    R1,[SP, #+52]
   \   00000150   0xFA00 0xF081      SXTAH    R0,R0,R1
   \   00000154   0x900B             STR      R0,[SP, #+44]
   \   00000156   0x.... 0x....      BL       get_infrared_command
   \   0000015A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000015C   0x288B             CMP      R0,#+139
   \   0000015E   0xD100             BNE.N    ??GYRO_Set_Zero_7
   \   00000160   0x2501             MOVS     R5,#+1
   \                     ??GYRO_Set_Zero_7: (+1)
   \   00000162   0x1C7F             ADDS     R7,R7,#+1
   \                     ??GYRO_Set_Zero_5: (+1)
   \   00000164   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000166   0x2F28             CMP      R7,#+40
   \   00000168   0xDB8F             BLT.N    ??GYRO_Set_Zero_6
   \   0000016A   0xF05F 0x0800      MOVS     R8,#+0
   \   0000016E   0xE02C             B.N      ??GYRO_Set_Zero_8
   \                     ??GYRO_Set_Zero_9: (+1)
   \   00000170   0xA811             ADD      R0,SP,#+68
   \   00000172   0x2150             MOVS     R1,#+80
   \   00000174   0xFB18 0xF101      SMULBB   R1,R8,R1
   \   00000178   0x4408             ADD      R0,R0,R1
   \   0000017A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000017C   0xF830 0x0017      LDRH     R0,[R0, R7, LSL #+1]
   \   00000180   0x4669             MOV      R1,SP
   \   00000182   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000186   0xF851 0x1028      LDR      R1,[R1, R8, LSL #+2]
   \   0000018A   0x1A40             SUBS     R0,R0,R1
   \   0000018C   0xA90E             ADD      R1,SP,#+56
   \   0000018E   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000192   0xF851 0x1028      LDR      R1,[R1, R8, LSL #+2]
   \   00000196   0xFB10 0x1000      SMLABB   R0,R0,R0,R1
   \   0000019A   0xA90E             ADD      R1,SP,#+56
   \   0000019C   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000001A0   0xF841 0x0028      STR      R0,[R1, R8, LSL #+2]
   \   000001A4   0x1C7F             ADDS     R7,R7,#+1
   \                     ??GYRO_Set_Zero_10: (+1)
   \   000001A6   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000001A8   0x2F28             CMP      R7,#+40
   \   000001AA   0xDBE1             BLT.N    ??GYRO_Set_Zero_9
   \   000001AC   0xA80E             ADD      R0,SP,#+56
   \   000001AE   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000001B2   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   000001B6   0x2128             MOVS     R1,#+40
   \   000001B8   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000001BC   0xA90E             ADD      R1,SP,#+56
   \   000001BE   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000001C2   0xF841 0x0028      STR      R0,[R1, R8, LSL #+2]
   \   000001C6   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??GYRO_Set_Zero_8: (+1)
   \   000001CA   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000001CE   0xF1B8 0x0F03      CMP      R8,#+3
   \   000001D2   0xDA1B             BGE.N    ??GYRO_Set_Zero_11
   \   000001D4   0x4668             MOV      R0,SP
   \   000001D6   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000001DA   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   000001DE   0x2128             MOVS     R1,#+40
   \   000001E0   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000001E4   0x4669             MOV      R1,SP
   \   000001E6   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000001EA   0xF841 0x0028      STR      R0,[R1, R8, LSL #+2]
   \   000001EE   0xA809             ADD      R0,SP,#+36
   \   000001F0   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000001F4   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   000001F8   0x2128             MOVS     R1,#+40
   \   000001FA   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000001FE   0xA909             ADD      R1,SP,#+36
   \   00000200   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000204   0xF841 0x0028      STR      R0,[R1, R8, LSL #+2]
   \   00000208   0x2700             MOVS     R7,#+0
   \   0000020A   0xE7CC             B.N      ??GYRO_Set_Zero_10
   \                     ??GYRO_Set_Zero_11: (+1)
   \   0000020C   0x980E             LDR      R0,[SP, #+56]
   \   0000020E   0xF5B0 0x7FC8      CMP      R0,#+400
   \   00000212   0xDA38             BGE.N    ??GYRO_Set_Zero_12
   \   00000214   0x980F             LDR      R0,[SP, #+60]
   \   00000216   0xF5B0 0x7FC8      CMP      R0,#+400
   \   0000021A   0xDA34             BGE.N    ??GYRO_Set_Zero_12
   \   0000021C   0x9810             LDR      R0,[SP, #+64]
   \   0000021E   0xF5B0 0x7FC8      CMP      R0,#+400
   \   00000222   0xDA30             BGE.N    ??GYRO_Set_Zero_12
   \   00000224   0xF05F 0x0800      MOVS     R8,#+0
   \   00000228   0xE027             B.N      ??GYRO_Set_Zero_13
   \                     ??GYRO_Set_Zero_14: (+1)
   \   0000022A   0x4668             MOV      R0,SP
   \   0000022C   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000230   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   00000234   0x.... 0x....      BL       __aeabi_i2f
   \   00000238   0xA906             ADD      R1,SP,#+24
   \   0000023A   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000023E   0xF851 0x1028      LDR      R1,[R1, R8, LSL #+2]
   \   00000242   0x.... 0x....      BL       __aeabi_fadd
   \   00000246   0xA906             ADD      R1,SP,#+24
   \   00000248   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000024C   0xF841 0x0028      STR      R0,[R1, R8, LSL #+2]
   \   00000250   0xA809             ADD      R0,SP,#+36
   \   00000252   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000256   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   0000025A   0x.... 0x....      BL       __aeabi_i2f
   \   0000025E   0xA903             ADD      R1,SP,#+12
   \   00000260   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000264   0xF851 0x1028      LDR      R1,[R1, R8, LSL #+2]
   \   00000268   0x.... 0x....      BL       __aeabi_fadd
   \   0000026C   0xA903             ADD      R1,SP,#+12
   \   0000026E   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000272   0xF841 0x0028      STR      R0,[R1, R8, LSL #+2]
   \   00000276   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??GYRO_Set_Zero_13: (+1)
   \   0000027A   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000027E   0xF1B8 0x0F03      CMP      R8,#+3
   \   00000282   0xDBD2             BLT.N    ??GYRO_Set_Zero_14
   \   00000284   0x1C64             ADDS     R4,R4,#+1
   \                     ??GYRO_Set_Zero_12: (+1)
   \   00000286   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000288   0x2C0C             CMP      R4,#+12
   \   0000028A   0xDB59             BLT.N    ??GYRO_Set_Zero_15
   \   0000028C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000290   0xE023             B.N      ??GYRO_Set_Zero_16
   \                     ??GYRO_Set_Zero_17: (+1)
   \   00000292   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000294   0x0020             MOVS     R0,R4
   \   00000296   0x.... 0x....      BL       __aeabi_i2f
   \   0000029A   0x0001             MOVS     R1,R0
   \   0000029C   0xA806             ADD      R0,SP,#+24
   \   0000029E   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000002A2   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   000002A6   0x.... 0x....      BL       __aeabi_fdiv
   \   000002AA   0xA906             ADD      R1,SP,#+24
   \   000002AC   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000002B0   0xF841 0x0028      STR      R0,[R1, R8, LSL #+2]
   \   000002B4   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000002B6   0x0020             MOVS     R0,R4
   \   000002B8   0x.... 0x....      BL       __aeabi_i2f
   \   000002BC   0x0001             MOVS     R1,R0
   \   000002BE   0xA803             ADD      R0,SP,#+12
   \   000002C0   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000002C4   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   000002C8   0x.... 0x....      BL       __aeabi_fdiv
   \   000002CC   0xA903             ADD      R1,SP,#+12
   \   000002CE   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000002D2   0xF841 0x0028      STR      R0,[R1, R8, LSL #+2]
   \   000002D6   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??GYRO_Set_Zero_16: (+1)
   \   000002DA   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000002DE   0xF1B8 0x0F03      CMP      R8,#+3
   \   000002E2   0xDBD6             BLT.N    ??GYRO_Set_Zero_17
   \   000002E4   0x9806             LDR      R0,[SP, #+24]
   \   000002E6   0x.... 0x....      BL       __aeabi_f2d
   \   000002EA   0x....             LDR.N    R2,??DataTable8_4  ;; 0xeb851eb8
   \   000002EC   0x....             LDR.N    R3,??DataTable8_5  ;; 0x3f8eb851
   \   000002EE   0x.... 0x....      BL       __aeabi_dmul
   \   000002F2   0x.... 0x....      BL       __aeabi_d2f
   \   000002F6   0x....             LDR.N    R1,??DataTable8_6
   \   000002F8   0x6008             STR      R0,[R1, #+0]
   \   000002FA   0x9807             LDR      R0,[SP, #+28]
   \   000002FC   0x.... 0x....      BL       __aeabi_f2d
   \   00000300   0x....             LDR.N    R2,??DataTable8_4  ;; 0xeb851eb8
   \   00000302   0x....             LDR.N    R3,??DataTable8_5  ;; 0x3f8eb851
   \   00000304   0x.... 0x....      BL       __aeabi_dmul
   \   00000308   0x.... 0x....      BL       __aeabi_d2f
   \   0000030C   0x....             LDR.N    R1,??DataTable8_7
   \   0000030E   0x6008             STR      R0,[R1, #+0]
   \   00000310   0x9808             LDR      R0,[SP, #+32]
   \   00000312   0x.... 0x....      BL       __aeabi_f2d
   \   00000316   0x....             LDR.N    R2,??DataTable8_4  ;; 0xeb851eb8
   \   00000318   0x....             LDR.N    R3,??DataTable8_5  ;; 0x3f8eb851
   \   0000031A   0x.... 0x....      BL       __aeabi_dmul
   \   0000031E   0x.... 0x....      BL       __aeabi_d2f
   \   00000322   0x....             LDR.N    R1,??DataTable8_8
   \   00000324   0x6008             STR      R0,[R1, #+0]
   \   00000326   0x9803             LDR      R0,[SP, #+12]
   \   00000328   0x....             LDR.N    R1,??DataTable8_12
   \   0000032A   0x6008             STR      R0,[R1, #+0]
   \   0000032C   0x9804             LDR      R0,[SP, #+16]
   \   0000032E   0x....             LDR.N    R1,??DataTable8_13
   \   00000330   0x6008             STR      R0,[R1, #+0]
   \   00000332   0x9805             LDR      R0,[SP, #+20]
   \   00000334   0x....             LDR.N    R1,??DataTable8_14
   \   00000336   0x6008             STR      R0,[R1, #+0]
   \   00000338   0x2001             MOVS     R0,#+1
   \   0000033A   0x....             LDR.N    R1,??DataTable8_15
   \   0000033C   0x7008             STRB     R0,[R1, #+0]
   \   0000033E   0xE003             B.N      ??GYRO_Set_Zero_2
   \                     ??GYRO_Set_Zero_15: (+1)
   \   00000340   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000342   0x2D00             CMP      R5,#+0
   \   00000344   0xF43F 0xAE77      BEQ.W    ??GYRO_Set_Zero_1
    231              
    232          ////        sprintf(s,"%5d",k);
    233          ////        oled_display_6x8str(0,2,s);
    234          ////        sprintf(s,"X:%4dY:%4dZ:%4d",gyro_S2[0],gyro_S2[1],gyro_S2[2]);
    235          ////        oled_display_6x8str(0,4,s);
    236          ////        sprintf(s,"X:%.3iY:%.3iZ:%.3i",(float)(gyro_zero_temp[0]/zero_counter),(float)(gyro_zero_temp[1]/zero_counter),(float)(gyro_zero_temp[2]/zero_counter));
    237          ////        oled_display_6x8str(0,6,s);
    238          //        oled_print_short(0, 2, k);
    239          ////        oled_display_6x8str(0,4,"x");
    240          ////        oled_display_6x8str(40,4,"y");
    241          ////        oled_display_6x8str(80,4,"z");
    242          //        oled_print_short(4, 4, gyro_S2[0]);
    243          //        oled_print_short(44, 4, gyro_S2[1]);
    244          //        oled_print_short(84, 4, gyro_S2[2]);
    245          ////        oled_display_6x8str(0,6,"x");
    246          ////        oled_display_6x8str(40,6,"y");
    247          ////        oled_display_6x8str(80,6,"z");
    248          //        oled_print_short(4, 6, (int16)(100*(gyro_zero_temp[0]/zero_counter)));
    249          //        oled_print_short(44, 6, (int16)(100*(gyro_zero_temp[0]/zero_counter)));
    250          //        oled_print_short(84, 6, (int16)(100*(gyro_zero_temp[0]/zero_counter)));
    251              }
    252              
    253              //while(!sleep_ms(500,3));
    254              
    255              oled_fill(0x00);
   \                     ??GYRO_Set_Zero_2: (+1)
   \   00000348   0x2000             MOVS     R0,#+0
   \   0000034A   0x.... 0x....      BL       oled_fill
    256          }
   \   0000034E   0xB04E             ADD      SP,SP,#+312
   \   00000350   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x........         DC32     `Get_Gyro_All::gyro`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x........         DC32     mpu_gyro_x

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   0x........         DC32     mpu_gyro_y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \   00000000   0x........         DC32     mpu_gyro_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \   00000000   0xEB851EB8         DC32     0xeb851eb8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_5:
   \   00000000   0x3F8EB851         DC32     0x3f8eb851

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_6:
   \   00000000   0x........         DC32     gf_gyro_bias_x

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_7:
   \   00000000   0x........         DC32     gf_gyro_bias_y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_8:
   \   00000000   0x........         DC32     gf_gyro_bias_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_9:
   \   00000000   0x........         DC32     mpu_acce_x

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_10:
   \   00000000   0x........         DC32     mpu_acce_y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_11:
   \   00000000   0x........         DC32     mpu_acce_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_12:
   \   00000000   0x........         DC32     gf_acce_bias_x

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_13:
   \   00000000   0x........         DC32     gf_acce_bias_y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_14:
   \   00000000   0x........         DC32     gf_acce_bias_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_15:
   \   00000000   0x........         DC32     guc_gyro_zero_flag

   \                                 In section .rodata, align 2
   \   00000000   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 2
   \   00000000   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 2
   \   00000000   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 2
   \   00000000   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 2
   \   00000000   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 2
   \   00000000   0x00 0x00          DC8 0, 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
     336   GYRO_Set_Zero
       336   -> Get_Acc_All
       336   -> Get_Gyro_All
       336   -> __aeabi_d2f
       336   -> __aeabi_dmul
       336   -> __aeabi_f2d
       336   -> __aeabi_f2iz
       336   -> __aeabi_fadd
       336   -> __aeabi_fdiv
       336   -> __aeabi_i2f
       336   -> get_infrared_command
       336   -> oled_display_chinese
       336   -> oled_fill
       336   -> sleep_ms
      16   Get_Acc_All
        16   -> GPIO_I2C_Read_N
        16   -> __aeabi_i2f
       8   Get_Acc_X
         8   -> GPIO_I2C_Read_N
         8   -> __aeabi_i2f
       8   Get_Acc_Y
         8   -> GPIO_I2C_Read_N
         8   -> __aeabi_i2f
       8   Get_Acc_Z
         8   -> GPIO_I2C_Read_N
         8   -> __aeabi_i2f
       8   Get_Gyro_All
         8   -> GPIO_I2C_Read_N
         8   -> __aeabi_i2f
      16   Get_Gyro_X
        16   -> GPIO_I2C_Read_N
        16   -> __aeabi_d2f
        16   -> __aeabi_dmul
        16   -> __aeabi_dsub
        16   -> __aeabi_f2d
        16   -> __aeabi_i2d
      16   Get_Gyro_Y
        16   -> GPIO_I2C_Read_N
        16   -> __aeabi_d2f
        16   -> __aeabi_dmul
        16   -> __aeabi_dsub
        16   -> __aeabi_f2d
        16   -> __aeabi_i2d
      16   Get_Gyro_Z
        16   -> GPIO_I2C_Read_N
        16   -> __aeabi_d2f
        16   -> __aeabi_dmul
        16   -> __aeabi_dsub
        16   -> __aeabi_f2d
        16   -> __aeabi_i2d
       8   MPU6050_Init
         8   -> GPIO_I2C_Write_1


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_10
       4  ??DataTable8_11
       4  ??DataTable8_12
       4  ??DataTable8_13
       4  ??DataTable8_14
       4  ??DataTable8_15
       4  ??DataTable8_2
       4  ??DataTable8_3
       4  ??DataTable8_4
       4  ??DataTable8_5
       4  ??DataTable8_6
       4  ??DataTable8_7
       4  ??DataTable8_8
       4  ??DataTable8_9
       2  ?_0
       2  ?_1
       2  ?_2
       8  ?_3
       2  ?_4
       2  ?_5
       2  ?_6
     852  GYRO_Set_Zero
     100  Get_Acc_All
      46  Get_Acc_X
      46  Get_Acc_Y
      44  Get_Acc_Z
     102  Get_Gyro_All
      88  Get_Gyro_X
      88  Get_Gyro_Y
      88  Get_Gyro_Z
      54  MPU6050_Init
       4  gf_acce_bias_x
       4  gf_acce_bias_y
       4  gf_acce_bias_z
       4  gf_gyro_bias_x
       4  gf_gyro_bias_y
       4  gf_gyro_bias_z
       8  gyro
       4  mpu_acce_x
       4  mpu_acce_y
       4  mpu_acce_z
       4  mpu_gyro_x
       4  mpu_gyro_y
       4  mpu_gyro_z

 
    56 bytes in section .bss
    20 bytes in section .rodata
 1 572 bytes in section .text
 
 1 572 bytes of CODE  memory
    20 bytes of CONST memory
    56 bytes of DATA  memory

Errors: none
Warnings: none
