###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       08/Jul/2019  02:43:00
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\app\device\src\motor.c
#    Command line =  
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\app\device\src\motor.c
#        -D LPLD_K60 -lCN
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\List
#        -lB
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\List
#        -o
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\CPU\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\common\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\LPLD\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\LPLD\HW\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\FatFs\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\FatFs\option\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\USB\common\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\USB\driver\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\USB\descriptor\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\USB\class\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\control\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\debug\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\device\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\signal\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\system\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\control\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\debug\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\device\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\signal\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\system\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\drivers\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\drivers\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\charge\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\charge\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\LPLD\FUNC\
#        -Ol -I "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\List\motor.lst
#    Object file  =  
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\Obj\motor.o
#
###############################################################################

D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\app\device\src\motor.c
      1          /*=============================================
      2              @file         motor.c
      3              @brief        电机文件
      4              @programmer   Beyond Hsueh
      5          =============================================*/
      6          
      7          #include "motor.h"
      8          
      9          /*===============================================================
     10                  @note      春游浩荡，是年年、寒食梨花时节；
     11                             白锦无纹香烂漫，玉树琼葩堆雪。
     12                             静夜沉沉，浮光霭霭，冷浸溶溶月；
     13                             人间天上，烂银霞照通彻。
     14                             浑似姑射真人，天姿灵秀，意气舒高洁；
     15                             万化参差谁信道，不与群芳同列。
     16                             浩气清英，仙材卓荦，下土难分别；
     17                             瑶台归去，洞天方看清绝。
     18          ==================================================================*/     
     19          
     20          /*===============================================================
     21          	@brief     电机输出及方向初始化
     22          ==================================================================*/

   \                                 In section .text, align 2, keep-with-next
     23          void Motor_Init()
     24          { 
   \                     Motor_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     25              Motor_PWM_Init();
   \   00000002   0x.... 0x....      BL       Motor_PWM_Init
     26                 
     27              //控制方向的引脚
     28              GPIO_Init(RIGHT_MOTOR_DIR_PORT, RIGHT_MOTOR_DIR_PIN_MASK, DIR_OUTPUT, RIGHT_MOTOR_FORWARD_LV);
   \   00000006   0x2301             MOVS     R3,#+1
   \   00000008   0x2201             MOVS     R2,#+1
   \   0000000A   0x2101             MOVS     R1,#+1
   \   0000000C   0x....             LDR.N    R0,??DataTable3  ;; 0x400ff080
   \   0000000E   0x.... 0x....      BL       GPIO_Init
     29              GPIO_Init(LEFT_MOTOR_DIR_PORT, LEFT_MOTOR_DIR_PIN_MASK, DIR_OUTPUT, LEFT_MOTOR_FORWARD_LV);    
   \   00000012   0x2301             MOVS     R3,#+1
   \   00000014   0x2201             MOVS     R2,#+1
   \   00000016   0x2104             MOVS     R1,#+4
   \   00000018   0x....             LDR.N    R0,??DataTable3  ;; 0x400ff080
   \   0000001A   0x.... 0x....      BL       GPIO_Init
     30          }
   \   0000001E   0xBD01             POP      {R0,PC}          ;; return
     31          
     32          /*===============================================================
     33          	@brief     正反转控制
     34          	@note      PWM正为正转，否则反转，单极性控制
     35          ==================================================================*/

   \                                 In section .text, align 2, keep-with-next
     36          void Set_Motor_PWM(int16 i_motor_PWM, uint8 uc_motor_sele)
     37          {
   \                     Set_Motor_PWM: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     38              if (uc_motor_sele == LEFT_MOTOR)//左电机
   \   00000002   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000004   0x2900             CMP      R1,#+0
   \   00000006   0xD11C             BNE.N    ??Set_Motor_PWM_0
     39              {
     40                  if (i_motor_PWM > 0)
   \   00000008   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000000A   0x2801             CMP      R0,#+1
   \   0000000C   0xDB08             BLT.N    ??Set_Motor_PWM_1
     41                  {
     42                      Change_PWM_Motor_Left(i_motor_PWM);
   \   0000000E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000010   0x.... 0x....      BL       Change_PWM_Motor_Left
     43                      LPLD_GPIO_Output_b(LEFT_MOTOR_DIR_PORT, LEFT_MOTOR_DIR_PIN, LEFT_MOTOR_FORWARD_LV);
   \   00000014   0x2201             MOVS     R2,#+1
   \   00000016   0x2102             MOVS     R1,#+2
   \   00000018   0x....             LDR.N    R0,??DataTable3  ;; 0x400ff080
   \   0000001A   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   0000001E   0xE02C             B.N      ??Set_Motor_PWM_2
     44                  }
     45                  else if (i_motor_PWM < 0)
   \                     ??Set_Motor_PWM_1: (+1)
   \   00000020   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000022   0x2800             CMP      R0,#+0
   \   00000024   0xD509             BPL.N    ??Set_Motor_PWM_3
     46                  {
     47                      Change_PWM_Motor_Left(-i_motor_PWM);
   \   00000026   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000028   0x4240             RSBS     R0,R0,#+0
   \   0000002A   0x.... 0x....      BL       Change_PWM_Motor_Left
     48                      LPLD_GPIO_Output_b(LEFT_MOTOR_DIR_PORT, LEFT_MOTOR_DIR_PIN, LEFT_MOTOR_BACKWARD_LV);
   \   0000002E   0x2200             MOVS     R2,#+0
   \   00000030   0x2102             MOVS     R1,#+2
   \   00000032   0x....             LDR.N    R0,??DataTable3  ;; 0x400ff080
   \   00000034   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000038   0xE01F             B.N      ??Set_Motor_PWM_2
     49                  }
     50                  else
     51                  {
     52                      Change_PWM_Motor_Left(0);
   \                     ??Set_Motor_PWM_3: (+1)
   \   0000003A   0x2000             MOVS     R0,#+0
   \   0000003C   0x.... 0x....      BL       Change_PWM_Motor_Left
   \   00000040   0xE01B             B.N      ??Set_Motor_PWM_2
     53                  }
     54              }
     55              else//右电机
     56              {
     57                  if (i_motor_PWM > 0)
   \                     ??Set_Motor_PWM_0: (+1)
   \   00000042   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000044   0x2801             CMP      R0,#+1
   \   00000046   0xDB08             BLT.N    ??Set_Motor_PWM_4
     58                  {
     59                      Change_PWM_Motor_Right(i_motor_PWM);
   \   00000048   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000004A   0x.... 0x....      BL       Change_PWM_Motor_Right
     60                      LPLD_GPIO_Output_b(RIGHT_MOTOR_DIR_PORT, RIGHT_MOTOR_DIR_PIN, RIGHT_MOTOR_FORWARD_LV);
   \   0000004E   0x2201             MOVS     R2,#+1
   \   00000050   0x2100             MOVS     R1,#+0
   \   00000052   0x....             LDR.N    R0,??DataTable3  ;; 0x400ff080
   \   00000054   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000058   0xE00F             B.N      ??Set_Motor_PWM_2
     61                  }
     62                  else if (i_motor_PWM < 0)
   \                     ??Set_Motor_PWM_4: (+1)
   \   0000005A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000005C   0x2800             CMP      R0,#+0
   \   0000005E   0xD509             BPL.N    ??Set_Motor_PWM_5
     63                  {
     64                      Change_PWM_Motor_Right(-i_motor_PWM);
   \   00000060   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000062   0x4240             RSBS     R0,R0,#+0
   \   00000064   0x.... 0x....      BL       Change_PWM_Motor_Right
     65                      LPLD_GPIO_Output_b(RIGHT_MOTOR_DIR_PORT, RIGHT_MOTOR_DIR_PIN, RIGHT_MOTOR_BACKWARD_LV);
   \   00000068   0x2200             MOVS     R2,#+0
   \   0000006A   0x2100             MOVS     R1,#+0
   \   0000006C   0x....             LDR.N    R0,??DataTable3  ;; 0x400ff080
   \   0000006E   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000072   0xE002             B.N      ??Set_Motor_PWM_2
     66                  }
     67                  else
     68                  {
     69                      Change_PWM_Motor_Right(0);
   \                     ??Set_Motor_PWM_5: (+1)
   \   00000074   0x2000             MOVS     R0,#+0
   \   00000076   0x.... 0x....      BL       Change_PWM_Motor_Right
     70                  }
     71              }	
     72          }
   \                     ??Set_Motor_PWM_2: (+1)
   \   0000007A   0xBD01             POP      {R0,PC}          ;; return
     73          
     74          
     75          /*===============================================================
     76          	@brief     电机输出
     77          ==================================================================*/

   \                                 In section .text, align 2, keep-with-next
     78          void Motor_Output()
     79          {             
   \                     Motor_Output: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
     80              int16 i_car_left_PWM;
     81              int16 i_car_right_PWM;
     82          //    int32 car_speed = 0;
     83              static uint8 suc_wait_start_flag = 0;
     84          
     85          //    car_speed = gl_car_speed;
     86          //    Speed_PWM_Delta(&i_car_left_PWM ,&i_car_right_PWM ,gl_pwm_out);
     87              
     88              //gl_div_pwm_set = gl_direction_set;
     89                  
     90              i_car_left_PWM = gl_pwm_output - gl_direction_output;
   \   00000002   0x....             LDR.N    R0,??DataTable3_1
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x....             LDR.N    R1,??DataTable3_2
   \   00000008   0x6809             LDR      R1,[R1, #+0]
   \   0000000A   0x1A44             SUBS     R4,R0,R1
     91              i_car_right_PWM = gl_pwm_output + gl_direction_output;
   \   0000000C   0x....             LDR.N    R0,??DataTable3_1
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0x....             LDR.N    R1,??DataTable3_2
   \   00000012   0x6809             LDR      R1,[R1, #+0]
   \   00000014   0x180D             ADDS     R5,R1,R0
     92                
     93              //需要乘系数
     94              //限幅
     95              i_car_left_PWM = (int16)Limiter(i_car_left_PWM, -MAX_MOTOR_PWM, MAX_MOTOR_PWM);
   \   00000016   0x....             LDR.N    R2,??DataTable3_3  ;; 0x45fa0000
   \   00000018   0x....             LDR.N    R1,??DataTable3_4  ;; 0xc5fa0000
   \   0000001A   0x000E             MOVS     R6,R1
   \   0000001C   0x0017             MOVS     R7,R2
   \   0000001E   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000020   0x0020             MOVS     R0,R4
   \   00000022   0x.... 0x....      BL       __aeabi_i2f
   \   00000026   0x003A             MOVS     R2,R7
   \   00000028   0x0031             MOVS     R1,R6
   \   0000002A   0x.... 0x....      BL       Limiter
   \   0000002E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000032   0x0004             MOVS     R4,R0
     96              i_car_right_PWM = (int16)Limiter(i_car_right_PWM, -MAX_MOTOR_PWM, MAX_MOTOR_PWM);       
   \   00000034   0x....             LDR.N    R2,??DataTable3_3  ;; 0x45fa0000
   \   00000036   0x....             LDR.N    R1,??DataTable3_4  ;; 0xc5fa0000
   \   00000038   0x000E             MOVS     R6,R1
   \   0000003A   0x0017             MOVS     R7,R2
   \   0000003C   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   0000003E   0x0028             MOVS     R0,R5
   \   00000040   0x.... 0x....      BL       __aeabi_i2f
   \   00000044   0x003A             MOVS     R2,R7
   \   00000046   0x0031             MOVS     R1,R6
   \   00000048   0x.... 0x....      BL       Limiter
   \   0000004C   0x.... 0x....      BL       __aeabi_f2iz
   \   00000050   0x0005             MOVS     R5,R0
     97              
     98              if(guc_car_run_flag == CAR_RUN)
   \   00000052   0x....             LDR.N    R0,??DataTable3_5
   \   00000054   0x7800             LDRB     R0,[R0, #+0]
   \   00000056   0x2801             CMP      R0,#+1
   \   00000058   0xD103             BNE.N    ??Motor_Output_0
     99              {
    100                    suc_wait_start_flag = 1;
   \   0000005A   0x2001             MOVS     R0,#+1
   \   0000005C   0x....             LDR.N    R1,??DataTable3_6
   \   0000005E   0x7008             STRB     R0,[R1, #+0]
   \   00000060   0xE009             B.N      ??Motor_Output_1
    101              }
    102              else if((guc_car_run_flag == CAR_STOP) && (suc_wait_start_flag == 1))//反向制动
   \                     ??Motor_Output_0: (+1)
   \   00000062   0x....             LDR.N    R0,??DataTable3_5
   \   00000064   0x7800             LDRB     R0,[R0, #+0]
   \   00000066   0x2800             CMP      R0,#+0
   \   00000068   0xD105             BNE.N    ??Motor_Output_1
   \   0000006A   0x....             LDR.N    R0,??DataTable3_6
   \   0000006C   0x7800             LDRB     R0,[R0, #+0]
   \   0000006E   0x2801             CMP      R0,#+1
   \   00000070   0xD101             BNE.N    ??Motor_Output_1
    103              {
    104          //        i_car_left_PWM = (int16)((gf_speed_i/10) * (0 - car_speed));
    105          //        i_car_right_PWM = (int16)((gf_speed_i/10) * (0 - car_speed));  
    106                  i_car_left_PWM = 0;
   \   00000072   0x2400             MOVS     R4,#+0
    107                  i_car_right_PWM = 0;          
   \   00000074   0x2500             MOVS     R5,#+0
    108              }
    109          
    110              if(!suc_wait_start_flag)
   \                     ??Motor_Output_1: (+1)
   \   00000076   0x....             LDR.N    R0,??DataTable3_6
   \   00000078   0x7800             LDRB     R0,[R0, #+0]
   \   0000007A   0x2800             CMP      R0,#+0
   \   0000007C   0xD101             BNE.N    ??Motor_Output_2
    111              {
    112                  i_car_left_PWM = 0;
   \   0000007E   0x2400             MOVS     R4,#+0
    113                  i_car_right_PWM = 0;      
   \   00000080   0x2500             MOVS     R5,#+0
    114              }
    115              
    116              Set_Motor_PWM(i_car_left_PWM, LEFT_MOTOR);            
   \                     ??Motor_Output_2: (+1)
   \   00000082   0x2100             MOVS     R1,#+0
   \   00000084   0x0020             MOVS     R0,R4
   \   00000086   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000088   0x.... 0x....      BL       Set_Motor_PWM
    117              Set_Motor_PWM(i_car_right_PWM, RIGHT_MOTOR);   
   \   0000008C   0x2101             MOVS     R1,#+1
   \   0000008E   0x0028             MOVS     R0,R5
   \   00000090   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000092   0x.... 0x....      BL       Set_Motor_PWM
    118          
    119          }
   \   00000096   0xBDF1             POP      {R0,R4-R7,PC}    ;; return

   \                                 In section .bss, align 1
   \                     `Motor_Output::suc_wait_start_flag`:
   \   00000000                      DS8 1
    120          
    121          /*===============================================================
    122          	@brief     紧急刹车
    123          ==================================================================*/

   \                                 In section .text, align 2, keep-with-next
    124          void Car_Stop()
    125          {
   \                     Car_Stop: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    126              guc_car_run_flag = CAR_STOP;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x....             LDR.N    R1,??DataTable3_5
   \   00000006   0x7008             STRB     R0,[R1, #+0]
    127              Change_PWM_Motor_Left(0);
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       Change_PWM_Motor_Left
    128              Change_PWM_Motor_Right(0);
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x.... 0x....      BL       Change_PWM_Motor_Right
    129          }
   \   00000014   0xBD01             POP      {R0,PC}          ;; return
    130          
    131          /*===============================================================
    132          	@brief     电机重新上电
    133          ==================================================================*/

   \                                 In section .text, align 2, keep-with-next
    134          void Car_Restart()
    135          {
    136          //    guc_car_run_flag = CAR_RUN ;
    137          }
   \                     Car_Restart: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x400FF080         DC32     0x400ff080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     gl_pwm_output

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     gl_direction_output

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x45FA0000         DC32     0x45fa0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0xC5FA0000         DC32     0xc5fa0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     guc_car_run_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     `Motor_Output::suc_wait_start_flag`
    138          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   Car_Restart
       8   Car_Stop
         8   -> Change_PWM_Motor_Left
         8   -> Change_PWM_Motor_Right
       8   Motor_Init
         8   -> GPIO_Init
         8   -> Motor_PWM_Init
      24   Motor_Output
        24   -> Limiter
        24   -> Set_Motor_PWM
        24   -> __aeabi_f2iz
        24   -> __aeabi_i2f
       8   Set_Motor_PWM
         8   -> Change_PWM_Motor_Left
         8   -> Change_PWM_Motor_Right
         8   -> LPLD_GPIO_Output_b


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       2  Car_Restart
      22  Car_Stop
      32  Motor_Init
     152  Motor_Output
     124  Set_Motor_PWM
       1  suc_wait_start_flag

 
   1 byte  in section .bss
 360 bytes in section .text
 
 360 bytes of CODE memory
   1 byte  of DATA memory

Errors: none
Warnings: none
