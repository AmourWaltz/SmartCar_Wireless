###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       08/Jul/2019  02:42:57
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\app\charge\src\circuit.c
#    Command line =  
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\app\charge\src\circuit.c
#        -D LPLD_K60 -lCN
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\List
#        -lB
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\List
#        -o
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\CPU\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\common\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\LPLD\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\LPLD\HW\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\FatFs\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\FatFs\option\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\USB\common\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\USB\driver\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\USB\descriptor\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\USB\class\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\control\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\debug\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\device\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\signal\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\system\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\control\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\debug\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\device\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\signal\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\system\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\drivers\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\drivers\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\charge\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\charge\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\LPLD\FUNC\
#        -Ol -I "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\List\circuit.lst
#    Object file  =  
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\Obj\circuit.o
#
###############################################################################

D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\app\charge\src\circuit.c
      1          /*=============================================
      2              @file         circuit.c
      3              @brief        电路参数
      4              @programmer   Beyond Hsueh
      5          =============================================*/
      6          
      7          #include "circuit.h"
      8          
      9          /*===============================================================
     10                  @note      驿外断桥边，寂寞开无主，
     11                             已是黄昏独自愁，更著风和雨；
     12                             无意苦争春，一任群芳妒，
     13                             零落成泥碾作尘，只有香如故。
     14          ==================================================================*/
     15          
     16          /*===============================================================
     17          	@brief     充电电路AD初始化
     18          ==================================================================*/

   \                                 In section .text, align 2, keep-with-next
     19          void Circuit_AD_Init()
     20          {
   \                     Circuit_AD_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     21              LPLD_ADC_Chn_Enable(VOLTAGE_OUTPUT_ADC_ID, VOLTAGE_OUTPUT_ADC_CH);
   \   00000002   0x2110             MOVS     R1,#+16
   \   00000004   0x....             LDR.N    R0,??DataTable3  ;; 0x4003b000
   \   00000006   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     22              LPLD_ADC_Chn_Enable(VOLTAGE_INPUT_ADC_ID, VOLTAGE_INPUT_ADC_CH);
   \   0000000A   0x210A             MOVS     R1,#+10
   \   0000000C   0x....             LDR.N    R0,??DataTable3  ;; 0x4003b000
   \   0000000E   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     23              LPLD_ADC_Chn_Enable(CURRENT_INPUT_ADC_ID, CURRENT_INPUT_ADC_CH);    
   \   00000012   0x2114             MOVS     R1,#+20
   \   00000014   0x....             LDR.N    R0,??DataTable3  ;; 0x4003b000
   \   00000016   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     24          }
   \   0000001A   0xBD01             POP      {R0,PC}          ;; return
     25            
     26          /*===============================================================
     27          	@brief     充电电路AD均值滤波
     28          ==================================================================*/

   \                                 In section .text, align 2, keep-with-next
     29          void Circuit_Channel_Get(vint16 channel_value[])
     30          {
   \                     Circuit_Channel_Get: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x0004             MOVS     R4,R0
     31              uint16 i;
     32              uint32 voltage_input_adc_add;
     33              uint32 voltage_output_adc_add;
     34              uint32 current_input_adc_add;
     35              
     36              current_input_adc_add = 0;
   \   00000006   0x2500             MOVS     R5,#+0
     37              voltage_input_adc_add = 0;
   \   00000008   0x2700             MOVS     R7,#+0
     38              voltage_output_adc_add = 0;
   \   0000000A   0xF05F 0x0800      MOVS     R8,#+0
     39              
     40              for(i = 0; i < CURRENT_INPUT_AVERAGE; i++)
   \   0000000E   0x2600             MOVS     R6,#+0
   \   00000010   0xE006             B.N      ??Circuit_Channel_Get_0
     41              {
     42                  current_input_adc_add += LPLD_ADC_Get(CURRENT_INPUT_ADC_ID, CURRENT_INPUT_ADC_CH);
   \                     ??Circuit_Channel_Get_1: (+1)
   \   00000012   0x2114             MOVS     R1,#+20
   \   00000014   0x....             LDR.N    R0,??DataTable3  ;; 0x4003b000
   \   00000016   0x.... 0x....      BL       LPLD_ADC_Get
   \   0000001A   0xFA15 0xF580      UXTAH    R5,R5,R0
     43              }
   \   0000001E   0x1C76             ADDS     R6,R6,#+1
   \                     ??Circuit_Channel_Get_0: (+1)
   \   00000020   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000022   0x2E06             CMP      R6,#+6
   \   00000024   0xDBF5             BLT.N    ??Circuit_Channel_Get_1
     44              
     45              for(i = 0; i < VOLTAGE_INPUT_AVERAGE; i++)
   \   00000026   0x2600             MOVS     R6,#+0
   \   00000028   0xE006             B.N      ??Circuit_Channel_Get_2
     46              {
     47                  voltage_input_adc_add += LPLD_ADC_Get(VOLTAGE_INPUT_ADC_ID, VOLTAGE_INPUT_ADC_CH);
   \                     ??Circuit_Channel_Get_3: (+1)
   \   0000002A   0x210A             MOVS     R1,#+10
   \   0000002C   0x....             LDR.N    R0,??DataTable3  ;; 0x4003b000
   \   0000002E   0x.... 0x....      BL       LPLD_ADC_Get
   \   00000032   0xFA17 0xF780      UXTAH    R7,R7,R0
     48              }
   \   00000036   0x1C76             ADDS     R6,R6,#+1
   \                     ??Circuit_Channel_Get_2: (+1)
   \   00000038   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000003A   0x2E06             CMP      R6,#+6
   \   0000003C   0xDBF5             BLT.N    ??Circuit_Channel_Get_3
     49              
     50              for(i = 0; i < VOLTAGE_OUTPUT_AVERAGE; i++)
   \   0000003E   0x2600             MOVS     R6,#+0
   \   00000040   0xE006             B.N      ??Circuit_Channel_Get_4
     51              {
     52                  voltage_output_adc_add += LPLD_ADC_Get(VOLTAGE_OUTPUT_ADC_ID, VOLTAGE_OUTPUT_ADC_CH);
   \                     ??Circuit_Channel_Get_5: (+1)
   \   00000042   0x2110             MOVS     R1,#+16
   \   00000044   0x....             LDR.N    R0,??DataTable3  ;; 0x4003b000
   \   00000046   0x.... 0x....      BL       LPLD_ADC_Get
   \   0000004A   0xFA18 0xF880      UXTAH    R8,R8,R0
     53              }
   \   0000004E   0x1C76             ADDS     R6,R6,#+1
   \                     ??Circuit_Channel_Get_4: (+1)
   \   00000050   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000052   0x2E06             CMP      R6,#+6
   \   00000054   0xDBF5             BLT.N    ??Circuit_Channel_Get_5
     54              
     55              channel_value[V_REF] = voltage_input_adc_add / VOLTAGE_INPUT_AVERAGE;
   \   00000056   0x2006             MOVS     R0,#+6
   \   00000058   0xFBB7 0xF0F0      UDIV     R0,R7,R0
   \   0000005C   0x8020             STRH     R0,[R4, #+0]
     56              channel_value[V_OUT] = voltage_output_adc_add / VOLTAGE_OUTPUT_AVERAGE;
   \   0000005E   0x2006             MOVS     R0,#+6
   \   00000060   0xFBB8 0xF0F0      UDIV     R0,R8,R0
   \   00000064   0x8060             STRH     R0,[R4, #+2]
     57              channel_value[I_IN] = current_input_adc_add / CURRENT_INPUT_AVERAGE;
   \   00000066   0x2006             MOVS     R0,#+6
   \   00000068   0xFBB5 0xF0F0      UDIV     R0,R5,R0
   \   0000006C   0x80A0             STRH     R0,[R4, #+4]
     58          }
   \   0000006E   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
     59          
     60          /*===============================================================
     61          	@brief     电路通道AD转换结果
     62          ==================================================================*/

   \                                 In section .text, align 2, keep-with-next
     63          void Circuit_Signal_Get()
     64          {
   \                     Circuit_Signal_Get: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
     65          ////    static int32 si_last_power;
     66              static int32 si_last_current;
     67              
     68              int32 voltage_output;
     69              int32 current_input;
     70          //    int32 power_intput;
     71              
     72              vint16 inductor_value[NUMBER_CHANNEL];
     73              Circuit_Channel_Get(inductor_value);
   \   00000004   0x4668             MOV      R0,SP
   \   00000006   0x.... 0x....      BL       Circuit_Channel_Get
     74                  
     75              
     76              gl_current_input = ((int32)(inductor_value[I_IN])*(5000))/4095;//输出电流
   \   0000000A   0xF9BD 0x0004      LDRSH    R0,[SP, #+4]
   \   0000000E   0xF241 0x3188      MOVW     R1,#+5000
   \   00000012   0xFB10 0xF001      SMULBB   R0,R0,R1
   \   00000016   0xF640 0x71FF      MOVW     R1,#+4095
   \   0000001A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000001E   0x....             LDR.N    R1,??DataTable3_1
   \   00000020   0x6008             STR      R0,[R1, #+0]
     77          
     78              gl_voltage_input = ((int32)inductor_value[V_REF]*16*5000)/4095;//输入电压
   \   00000022   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   00000026   0x....             LDR.N    R1,??DataTable3_2  ;; 0x13880
   \   00000028   0x4348             MULS     R0,R1,R0
   \   0000002A   0xF640 0x71FF      MOVW     R1,#+4095
   \   0000002E   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000032   0x....             LDR.N    R1,??DataTable3_3
   \   00000034   0x6008             STR      R0,[R1, #+0]
     79              
     80              gl_voltage_output = ((int32)inductor_value[V_OUT]*4*5000)/4095 + 0;//输出电压 ，补偿二极管压降
   \   00000036   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   0000003A   0xF644 0x6120      MOVW     R1,#+20000
   \   0000003E   0xFB10 0xF001      SMULBB   R0,R0,R1
   \   00000042   0xF640 0x71FF      MOVW     R1,#+4095
   \   00000046   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000004A   0x....             LDR.N    R1,??DataTable3_4
   \   0000004C   0x6008             STR      R0,[R1, #+0]
     81              gl_current_input = (20 * gl_current_input + (si_last_current - gl_current_input))/20;//惯性滤波
   \   0000004E   0x....             LDR.N    R0,??DataTable3_1
   \   00000050   0x6800             LDR      R0,[R0, #+0]
   \   00000052   0x2114             MOVS     R1,#+20
   \   00000054   0x....             LDR.N    R2,??DataTable3_5
   \   00000056   0x6812             LDR      R2,[R2, #+0]
   \   00000058   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   0000005C   0x....             LDR.N    R1,??DataTable3_1
   \   0000005E   0x6809             LDR      R1,[R1, #+0]
   \   00000060   0x1A40             SUBS     R0,R0,R1
   \   00000062   0x2114             MOVS     R1,#+20
   \   00000064   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000068   0x....             LDR.N    R1,??DataTable3_1
   \   0000006A   0x6008             STR      R0,[R1, #+0]
     82              
     83              voltage_output = gl_voltage_input;
   \   0000006C   0x....             LDR.N    R0,??DataTable3_3
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
     84              current_input = gl_current_input;
   \   00000070   0x....             LDR.N    R1,??DataTable3_1
   \   00000072   0x6809             LDR      R1,[R1, #+0]
     85              
     86              gl_power_output = (int32)((int32)voltage_output*(int32)current_input/1000);//输入功率
   \   00000074   0x4348             MULS     R0,R1,R0
   \   00000076   0xF44F 0x717A      MOV      R1,#+1000
   \   0000007A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000007E   0x....             LDR.N    R1,??DataTable3_6
   \   00000080   0x6008             STR      R0,[R1, #+0]
     87              
     88          //    power_intput = gl_power_output;
     89          //    
     90          //    gl_power_output = (int32)Limiter(si_last_power - power_intput,-50-power_intput/200,50+power_intput/200) + power_intput;
     91          //    si_last_power = gl_power_output; 
     92              si_last_current = gl_current_input;
   \   00000082   0x....             LDR.N    R0,??DataTable3_1
   \   00000084   0x6800             LDR      R0,[R0, #+0]
   \   00000086   0x....             LDR.N    R1,??DataTable3_5
   \   00000088   0x6008             STR      R0,[R1, #+0]
     93            
     94          }
   \   0000008A   0xBD07             POP      {R0-R2,PC}       ;; return

   \                                 In section .bss, align 4
   \                     `Circuit_Signal_Get::si_last_current`:
   \   00000000                      DS8 4
     95          
     96          /*===============================================================
     97          	@brief     电路低压检测
     98          ==================================================================*/

   \                                 In section .text, align 2, keep-with-next
     99          void Circuit_Low_Battery_Detection()
    100          {
   \                     Circuit_Low_Battery_Detection: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB089             SUB      SP,SP,#+36
    101              int8 string1[10],string2[10],string3[10];
    102              uint8 ui_button_value;
    103              static uint16 sui_low_battery_count = 0;
    104              static uint8 suc_low_battery_flag = 0;
    105          
    106              if((ADC_Battery_Voltage() < 2700) && (gul_time_100us > 200000))   
   \   00000004   0x.... 0x....      BL       ADC_Battery_Voltage
   \   00000008   0xF640 0x218C      MOVW     R1,#+2700
   \   0000000C   0x4288             CMP      R0,R1
   \   0000000E   0xDA0A             BGE.N    ??Circuit_Low_Battery_Detection_0
   \   00000010   0x....             LDR.N    R0,??DataTable3_7
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x....             LDR.N    R1,??DataTable3_8  ;; 0x30d41
   \   00000016   0x4288             CMP      R0,R1
   \   00000018   0xD305             BCC.N    ??Circuit_Low_Battery_Detection_0
    107              {
    108                  sui_low_battery_count++;
   \   0000001A   0x....             LDR.N    R0,??DataTable3_9
   \   0000001C   0x8800             LDRH     R0,[R0, #+0]
   \   0000001E   0x1C40             ADDS     R0,R0,#+1
   \   00000020   0x....             LDR.N    R1,??DataTable3_9
   \   00000022   0x8008             STRH     R0,[R1, #+0]
   \   00000024   0xE002             B.N      ??Circuit_Low_Battery_Detection_1
    109              }
    110              else
    111              {
    112                  sui_low_battery_count = 0;
   \                     ??Circuit_Low_Battery_Detection_0: (+1)
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x....             LDR.N    R1,??DataTable3_9
   \   0000002A   0x8008             STRH     R0,[R1, #+0]
    113              }
    114              
    115              if(sui_low_battery_count > 10)
   \                     ??Circuit_Low_Battery_Detection_1: (+1)
   \   0000002C   0x....             LDR.N    R0,??DataTable3_9
   \   0000002E   0x8800             LDRH     R0,[R0, #+0]
   \   00000030   0x280B             CMP      R0,#+11
   \   00000032   0xDB4E             BLT.N    ??Circuit_Low_Battery_Detection_2
    116              {
    117                  //显示距离和电量
    118                  sprintf(string1,"distance: %6d cm",gl_car_running_distance);
   \   00000034   0x....             LDR.N    R0,??DataTable3_10
   \   00000036   0x6802             LDR      R2,[R0, #+0]
   \   00000038   0x....             LDR.N    R1,??DataTable3_11
   \   0000003A   0xA806             ADD      R0,SP,#+24
   \   0000003C   0x.... 0x....      BL       sprintf
    119                  sprintf(string2,"battery: %6d mV ",ADC_Battery_Voltage() );
   \   00000040   0x.... 0x....      BL       ADC_Battery_Voltage
   \   00000044   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000046   0x0002             MOVS     R2,R0
   \   00000048   0x....             LDR.N    R1,??DataTable3_12
   \   0000004A   0xA803             ADD      R0,SP,#+12
   \   0000004C   0x.... 0x....      BL       sprintf
    120                  oled_display_16x8str(0,2,string1);
   \   00000050   0xAA06             ADD      R2,SP,#+24
   \   00000052   0x2102             MOVS     R1,#+2
   \   00000054   0x2000             MOVS     R0,#+0
   \   00000056   0x.... 0x....      BL       oled_display_16x8str
    121                  oled_display_16x8str(0,4,string2);
   \   0000005A   0xAA03             ADD      R2,SP,#+12
   \   0000005C   0x2104             MOVS     R1,#+4
   \   0000005E   0x2000             MOVS     R0,#+0
   \   00000060   0x.... 0x....      BL       oled_display_16x8str
    122          
    123                  if(suc_low_battery_flag == 0)
   \   00000064   0x....             LDR.N    R0,??DataTable3_13
   \   00000066   0x7800             LDRB     R0,[R0, #+0]
   \   00000068   0x2800             CMP      R0,#+0
   \   0000006A   0xD12A             BNE.N    ??Circuit_Low_Battery_Detection_3
    124                  {
    125                      suc_low_battery_flag = 1;
   \   0000006C   0x2001             MOVS     R0,#+1
   \   0000006E   0x....             LDR.N    R1,??DataTable3_13
   \   00000070   0x7008             STRB     R0,[R1, #+0]
    126                      
    127                      ui_button_value = button_scan();
   \   00000072   0x.... 0x....      BL       button_scan
    128                      
    129                      if(ui_button_value == FIVE_DIR_OK)
   \   00000076   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000078   0x2805             CMP      R0,#+5
   \   0000007A   0xD104             BNE.N    ??Circuit_Low_Battery_Detection_4
    130                      {
    131                          oled_init();
   \   0000007C   0x.... 0x....      BL       oled_init
    132                          oled_fill(0x00); 
   \   00000080   0x2000             MOVS     R0,#+0
   \   00000082   0x.... 0x....      BL       oled_fill
    133                      }
    134                      sprintf(string3, "time: %6.2d s ", gul_time_100us/10000 );
   \                     ??Circuit_Low_Battery_Detection_4: (+1)
   \   00000086   0x....             LDR.N    R0,??DataTable3_7
   \   00000088   0x6800             LDR      R0,[R0, #+0]
   \   0000008A   0xF242 0x7110      MOVW     R1,#+10000
   \   0000008E   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000092   0x....             LDR.N    R1,??DataTable3_14
   \   00000094   0x4668             MOV      R0,SP
   \   00000096   0x.... 0x....      BL       sprintf
    135                      oled_display_16x8str(0,6,string3);
   \   0000009A   0x466A             MOV      R2,SP
   \   0000009C   0x2106             MOVS     R1,#+6
   \   0000009E   0x2000             MOVS     R0,#+0
   \   000000A0   0x.... 0x....      BL       oled_display_16x8str
    136                      sleep_ms(1000,5);
   \   000000A4   0x2105             MOVS     R1,#+5
   \   000000A6   0xF44F 0x707A      MOV      R0,#+1000
   \   000000AA   0x.... 0x....      BL       sleep_ms
   \   000000AE   0xE001             B.N      ??Circuit_Low_Battery_Detection_5
    137                      while(!sleep_ms(500,5))
    138                      {
    139                          Beep_On();
   \                     ??Circuit_Low_Battery_Detection_6: (+1)
   \   000000B0   0x.... 0x....      BL       Beep_On
    140                      }
   \                     ??Circuit_Low_Battery_Detection_5: (+1)
   \   000000B4   0x2105             MOVS     R1,#+5
   \   000000B6   0xF44F 0x70FA      MOV      R0,#+500
   \   000000BA   0x.... 0x....      BL       sleep_ms
   \   000000BE   0x2800             CMP      R0,#+0
   \   000000C0   0xD0F6             BEQ.N    ??Circuit_Low_Battery_Detection_6
    141                  }
    142                  if((suc_low_battery_flag == 1))
   \                     ??Circuit_Low_Battery_Detection_3: (+1)
   \   000000C2   0x....             LDR.N    R0,??DataTable3_13
   \   000000C4   0x7800             LDRB     R0,[R0, #+0]
   \   000000C6   0x2801             CMP      R0,#+1
   \   000000C8   0xD103             BNE.N    ??Circuit_Low_Battery_Detection_2
    143                  {
    144                      Beep_Off();
   \   000000CA   0x.... 0x....      BL       Beep_Off
    145          
    146                      Car_Stop();
   \   000000CE   0x.... 0x....      BL       Car_Stop
    147                  }
    148              }
    149          }
   \                     ??Circuit_Low_Battery_Detection_2: (+1)
   \   000000D2   0xB009             ADD      SP,SP,#+36
   \   000000D4   0xBD00             POP      {PC}             ;; return

   \                                 In section .bss, align 2
   \                     `Circuit_Low_Battery_Detection::sui_low_battery_count`:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
   \                     `Circuit_Low_Battery_Detection::suc_low_battery_flag`:
   \   00000000                      DS8 1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x4003B000         DC32     0x4003b000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     gl_current_input

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x00013880         DC32     0x13880

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     gl_voltage_input

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     gl_voltage_output

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     `Circuit_Signal_Get::si_last_current`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     gl_power_output

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     gul_time_100us

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x00030D41         DC32     0x30d41

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x........         DC32     `Circuit_Low_Battery_Detection::sui_low_battery_count`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x........         DC32     gl_car_running_distance

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   0x........         DC32     `Circuit_Low_Battery_Detection::suc_low_battery_flag`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x64 0x69          DC8 "distance: %6d cm"
   \              0x73 0x74    
   \              0x61 0x6E    
   \              0x63 0x65    
   \              0x3A 0x20    
   \              0x25 0x36    
   \              0x64 0x20    
   \              0x63 0x6D    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x62 0x61          DC8 "battery: %6d mV "
   \              0x74 0x74    
   \              0x65 0x72    
   \              0x79 0x3A    
   \              0x20 0x25    
   \              0x36 0x64    
   \              0x20 0x6D    
   \              0x56 0x20    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x74 0x69          DC8 "time: %6.2d s "
   \              0x6D 0x65    
   \              0x3A 0x20    
   \              0x25 0x36    
   \              0x2E 0x32    
   \              0x64 0x20    
   \              0x73 0x20    
   \              0x00         
   \   0000000F   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Circuit_AD_Init
         8   -> LPLD_ADC_Chn_Enable
      24   Circuit_Channel_Get
        24   -> LPLD_ADC_Get
      40   Circuit_Low_Battery_Detection
        40   -> ADC_Battery_Voltage
        40   -> Beep_Off
        40   -> Beep_On
        40   -> Car_Stop
        40   -> button_scan
        40   -> oled_display_16x8str
        40   -> oled_fill
        40   -> oled_init
        40   -> sleep_ms
        40   -> sprintf
      16   Circuit_Signal_Get
        16   -> Circuit_Channel_Get


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
      20  ?_0
      20  ?_1
      16  ?_2
      28  Circuit_AD_Init
     114  Circuit_Channel_Get
     214  Circuit_Low_Battery_Detection
     140  Circuit_Signal_Get
       4  si_last_current
       1  suc_low_battery_flag
       2  sui_low_battery_count

 
   7 bytes in section .bss
  56 bytes in section .rodata
 556 bytes in section .text
 
 556 bytes of CODE  memory
  56 bytes of CONST memory
   7 bytes of DATA  memory

Errors: none
Warnings: none
