###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       08/Jul/2019  02:42:59
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\app\signal\src\inductor.c
#    Command line =  
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\app\signal\src\inductor.c
#        -D LPLD_K60 -lCN
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\List
#        -lB
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\List
#        -o
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\CPU\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\common\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\LPLD\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\LPLD\HW\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\FatFs\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\FatFs\option\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\USB\common\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\USB\driver\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\USB\descriptor\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\USB\class\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\control\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\debug\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\device\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\signal\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\system\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\control\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\debug\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\device\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\signal\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\system\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\drivers\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\drivers\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\charge\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\charge\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\LPLD\FUNC\
#        -Ol -I "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\List\inductor.lst
#    Object file  =  
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\Obj\inductor.o
#
###############################################################################

D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\app\signal\src\inductor.c
      1          /*=============================================
      2              @file         inductor.c
      3              @brief        电感AD采集获取
      4              @programmer   Beyond Hsueh
      5          =============================================*/
      6          
      7          #include "inductor.h"
      8          
      9          /*===============================================================
     10                  @note      天下风云出我辈，一入江湖岁月催；
     11                             皇图霸业谈笑中，不胜人生一场醉。
     12                             提剑跨骑挥鬼雨，白骨如山鸟惊飞；
     13                             尘世如潮人如水，只叹江湖几人回。
     14          ==================================================================*/ 
     15          
     16          /*===============================================================
     17          	@brief     通道初始化
     18          ==================================================================*/

   \                                 In section .text, align 2, keep-with-next
     19          void Inductor_Init(void)
     20          {
   \                     Inductor_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     21          #ifdef T_LEFT
     22              LPLD_ADC_Chn_Enable(LEFT_T_ADC_ID, LEFT_T_ADC_CH);
   \   00000002   0x2110             MOVS     R1,#+16
   \   00000004   0x....             LDR.N    R0,??DataTable2  ;; 0x400bb000
   \   00000006   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     23          #endif
     24          
     25          #ifdef T_RIGHT    
     26              LPLD_ADC_Chn_Enable(RIGHT_T_ADC_ID, RIGHT_T_ADC_CH);
   \   0000000A   0x2101             MOVS     R1,#+1
   \   0000000C   0x....             LDR.N    R0,??DataTable2_1  ;; 0x4003b000
   \   0000000E   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     27          #endif
     28          
     29          #ifdef M_BACK    
     30              LPLD_ADC_Chn_Enable(MID_B_ADC_ID, MID_B_ADC_CH);
   \   00000012   0x2103             MOVS     R1,#+3
   \   00000014   0x....             LDR.N    R0,??DataTable2  ;; 0x400bb000
   \   00000016   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     31          #endif
     32              
     33          #ifdef X_LEFT
     34              LPLD_ADC_Chn_Enable(LEFT_X_ADC_ID, LEFT_X_ADC_CH);
   \   0000001A   0x2103             MOVS     R1,#+3
   \   0000001C   0x....             LDR.N    R0,??DataTable2_1  ;; 0x4003b000
   \   0000001E   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     35          #endif
     36          
     37          #ifdef X_RIGHT    
     38              LPLD_ADC_Chn_Enable(RIGHT_X_ADC_ID, RIGHT_X_ADC_CH);
   \   00000022   0x2101             MOVS     R1,#+1
   \   00000024   0x....             LDR.N    R0,??DataTable2  ;; 0x400bb000
   \   00000026   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     39          #endif
     40          }
   \   0000002A   0xBD01             POP      {R0,PC}          ;; return
     41          
     42          /*===============================================================
     43          	@brief     单次采集单一通道值
     44          ==================================================================*/

   \                                 In section .text, align 2, keep-with-next
     45          uint16 Inductor_Once_Get(uint8 uc_inductor_num)
     46          {
   \                     Inductor_Once_Get: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x0001             MOVS     R1,R0
     47              uint16 ui_inductor_adc_temp = 0;
   \   00000004   0x2000             MOVS     R0,#+0
     48              switch (uc_inductor_num)
   \   00000006   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000008   0x2900             CMP      R1,#+0
   \   0000000A   0xD006             BEQ.N    ??Inductor_Once_Get_0
   \   0000000C   0x2902             CMP      R1,#+2
   \   0000000E   0xD00E             BEQ.N    ??Inductor_Once_Get_1
   \   00000010   0xD312             BCC.N    ??Inductor_Once_Get_2
   \   00000012   0x2904             CMP      R1,#+4
   \   00000014   0xD006             BEQ.N    ??Inductor_Once_Get_3
   \   00000016   0xD314             BCC.N    ??Inductor_Once_Get_4
   \   00000018   0xE018             B.N      ??Inductor_Once_Get_5
     49              {
     50          #ifdef T_LEFT
     51                  case T_LEFT:
     52                        ui_inductor_adc_temp = LPLD_ADC_Get(LEFT_T_ADC_ID, LEFT_T_ADC_CH);
   \                     ??Inductor_Once_Get_0: (+1)
   \   0000001A   0x2110             MOVS     R1,#+16
   \   0000001C   0x....             LDR.N    R0,??DataTable2  ;; 0x400bb000
   \   0000001E   0x.... 0x....      BL       LPLD_ADC_Get
     53                        break;
   \   00000022   0xE013             B.N      ??Inductor_Once_Get_6
     54          #endif
     55          
     56          #ifdef T_RIGHT
     57                  case T_RIGHT:
     58                        ui_inductor_adc_temp = LPLD_ADC_Get(RIGHT_T_ADC_ID, RIGHT_T_ADC_CH);
   \                     ??Inductor_Once_Get_3: (+1)
   \   00000024   0x2101             MOVS     R1,#+1
   \   00000026   0x....             LDR.N    R0,??DataTable2_1  ;; 0x4003b000
   \   00000028   0x.... 0x....      BL       LPLD_ADC_Get
     59                        break;
   \   0000002C   0xE00E             B.N      ??Inductor_Once_Get_6
     60          #endif
     61          
     62          #ifdef M_BACK
     63                  case M_BACK:
     64                        ui_inductor_adc_temp = LPLD_ADC_Get(MID_B_ADC_ID, MID_B_ADC_CH);
   \                     ??Inductor_Once_Get_1: (+1)
   \   0000002E   0x2103             MOVS     R1,#+3
   \   00000030   0x....             LDR.N    R0,??DataTable2  ;; 0x400bb000
   \   00000032   0x.... 0x....      BL       LPLD_ADC_Get
     65                        break;
   \   00000036   0xE009             B.N      ??Inductor_Once_Get_6
     66          #endif
     67                        
     68          #ifdef X_LEFT
     69                  case X_LEFT:
     70                        ui_inductor_adc_temp = LPLD_ADC_Get(LEFT_X_ADC_ID, LEFT_X_ADC_CH);
   \                     ??Inductor_Once_Get_2: (+1)
   \   00000038   0x2103             MOVS     R1,#+3
   \   0000003A   0x....             LDR.N    R0,??DataTable2_1  ;; 0x4003b000
   \   0000003C   0x.... 0x....      BL       LPLD_ADC_Get
     71                        break; 
   \   00000040   0xE004             B.N      ??Inductor_Once_Get_6
     72          #endif 
     73                        
     74          #ifdef X_RIGHT
     75                  case X_RIGHT:
     76                        ui_inductor_adc_temp = LPLD_ADC_Get(RIGHT_X_ADC_ID, RIGHT_X_ADC_CH);
   \                     ??Inductor_Once_Get_4: (+1)
   \   00000042   0x2101             MOVS     R1,#+1
   \   00000044   0x....             LDR.N    R0,??DataTable2  ;; 0x400bb000
   \   00000046   0x.... 0x....      BL       LPLD_ADC_Get
     77                        break; 
   \   0000004A   0xE7FF             B.N      ??Inductor_Once_Get_6
     78          #endif 
     79          
     80                  default:
     81                        break;         
     82              }
     83              return ui_inductor_adc_temp;
   \                     ??Inductor_Once_Get_5: (+1)
   \                     ??Inductor_Once_Get_6: (+1)
   \   0000004C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000004E   0xBD02             POP      {R1,PC}          ;; return
     84          }
     85          
     86          /*===============================================================
     87          	@brief     全通道获取
     88          ==================================================================*/

   \                                 In section .text, align 2, keep-with-next
     89          void Inductor_All_Get(vint16 inductor_value[])
     90          {
   \                     Inductor_All_Get: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
   \   00000004   0x0004             MOVS     R4,R0
     91              uint16 adc_value[NUM_INDUCTOR][AVER_TIMES] = {0};
   \   00000006   0x4668             MOV      R0,SP
   \   00000008   0x2128             MOVS     R1,#+40
   \   0000000A   0x.... 0x....      BL       __aeabi_memclr4
     92              uint16 temp_sum = 0;
   \   0000000E   0x2000             MOVS     R0,#+0
     93              int i = 0, j = 0;
   \   00000010   0x2500             MOVS     R5,#+0
   \   00000012   0x2600             MOVS     R6,#+0
     94              for (j = 0; j < AVER_TIMES; j++)
   \   00000014   0x2600             MOVS     R6,#+0
   \   00000016   0xE00C             B.N      ??Inductor_All_Get_0
     95              {
     96                  for (i = 0; i < NUM_INDUCTOR; i++)
     97                  {
     98                      adc_value[i][j] = Inductor_Once_Get(i);
   \                     ??Inductor_All_Get_1: (+1)
   \   00000018   0x4668             MOV      R0,SP
   \   0000001A   0xEB00 0x07C5      ADD      R7,R0,R5, LSL #+3
   \   0000001E   0x0028             MOVS     R0,R5
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0x.... 0x....      BL       Inductor_Once_Get
   \   00000026   0xF827 0x0016      STRH     R0,[R7, R6, LSL #+1]
     99                  }
   \   0000002A   0x1C6D             ADDS     R5,R5,#+1
   \                     ??Inductor_All_Get_2: (+1)
   \   0000002C   0x2D05             CMP      R5,#+5
   \   0000002E   0xDBF3             BLT.N    ??Inductor_All_Get_1
   \   00000030   0x1C76             ADDS     R6,R6,#+1
   \                     ??Inductor_All_Get_0: (+1)
   \   00000032   0x2E04             CMP      R6,#+4
   \   00000034   0xDA01             BGE.N    ??Inductor_All_Get_3
   \   00000036   0x2500             MOVS     R5,#+0
   \   00000038   0xE7F8             B.N      ??Inductor_All_Get_2
    100              }
    101              
    102              for (i = 0; i < NUM_INDUCTOR; i++)
   \                     ??Inductor_All_Get_3: (+1)
   \   0000003A   0x2500             MOVS     R5,#+0
   \   0000003C   0xE019             B.N      ??Inductor_All_Get_4
    103              {
    104                  temp_sum = 0;
    105                  for (j = 0; j < AVER_TIMES; j++)
    106                  {
    107                      temp_sum += adc_value[i][j];
   \                     ??Inductor_All_Get_5: (+1)
   \   0000003E   0x4669             MOV      R1,SP
   \   00000040   0xEB01 0x01C5      ADD      R1,R1,R5, LSL #+3
   \   00000044   0xF831 0x1016      LDRH     R1,[R1, R6, LSL #+1]
   \   00000048   0x1808             ADDS     R0,R1,R0
    108                  }
   \   0000004A   0x1C76             ADDS     R6,R6,#+1
   \                     ??Inductor_All_Get_6: (+1)
   \   0000004C   0x2E04             CMP      R6,#+4
   \   0000004E   0xDBF6             BLT.N    ??Inductor_All_Get_5
    109                  inductor_value[i] = (int16)((temp_sum+0.5*AVER_TIMES) / AVER_TIMES);
   \   00000050   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000052   0x.... 0x....      BL       __aeabi_ui2d
   \   00000056   0x2200             MOVS     R2,#+0
   \   00000058   0xF05F 0x4380      MOVS     R3,#+1073741824
   \   0000005C   0x.... 0x....      BL       __aeabi_dadd
   \   00000060   0x2200             MOVS     R2,#+0
   \   00000062   0x....             LDR.N    R3,??DataTable2_2  ;; 0x40100000
   \   00000064   0x.... 0x....      BL       __aeabi_ddiv
   \   00000068   0x.... 0x....      BL       __aeabi_d2iz
   \   0000006C   0xF824 0x0015      STRH     R0,[R4, R5, LSL #+1]
   \   00000070   0x1C6D             ADDS     R5,R5,#+1
   \                     ??Inductor_All_Get_4: (+1)
   \   00000072   0x2D05             CMP      R5,#+5
   \   00000074   0xDA02             BGE.N    ??Inductor_All_Get_7
   \   00000076   0x2000             MOVS     R0,#+0
   \   00000078   0x2600             MOVS     R6,#+0
   \   0000007A   0xE7E7             B.N      ??Inductor_All_Get_6
    110              }
    111          }
   \                     ??Inductor_All_Get_7: (+1)
   \   0000007C   0xB00B             ADD      SP,SP,#+44
   \   0000007E   0xBDF0             POP      {R4-R7,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x400BB000         DC32     0x400bb000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x4003B000         DC32     0x4003b000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x40100000         DC32     0x40100000

   \                                 In section .rodata, align 4
   \   00000000   0x0000 0x0000      DC16 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      64   Inductor_All_Get
        64   -> Inductor_Once_Get
        64   -> __aeabi_d2iz
        64   -> __aeabi_dadd
        64   -> __aeabi_ddiv
        64   -> __aeabi_memclr4
        64   -> __aeabi_ui2d
       8   Inductor_Init
         8   -> LPLD_ADC_Chn_Enable
       8   Inductor_Once_Get
         8   -> LPLD_ADC_Get


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
      40  ?_0
     128  Inductor_All_Get
      44  Inductor_Init
      80  Inductor_Once_Get

 
  40 bytes in section .rodata
 264 bytes in section .text
 
 264 bytes of CODE  memory
  40 bytes of CONST memory

Errors: none
Warnings: none
