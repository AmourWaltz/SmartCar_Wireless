###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       08/Jul/2019  02:42:59
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\app\debug\src\infrared_decode.c
#    Command line =  
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\app\debug\src\infrared_decode.c
#        -D LPLD_K60 -lCN
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\List
#        -lB
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\List
#        -o
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\CPU\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\common\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\LPLD\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\LPLD\HW\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\FatFs\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\FatFs\option\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\USB\common\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\USB\driver\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\USB\descriptor\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\USB\class\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\control\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\debug\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\device\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\signal\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\system\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\control\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\debug\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\device\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\signal\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\system\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\drivers\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\drivers\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\charge\inc\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\app\charge\src\
#        -I
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\..\..\..\lib\LPLD\FUNC\
#        -Ol -I "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\List\infrared_decode.lst
#    Object file  =  
#        D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\iar\FLASH\Obj\infrared_decode.o
#
###############################################################################

D:\Freescale\无线节能14th\wireless_energy_saving_14th\14th_wireless_energy_saving_NXP\14th_wireless_energy_saving\project\14th_wireless_energy_saving\app\debug\src\infrared_decode.c
      1          #include "infrared_decode.h"
      2          

   \                                 In section .bss, align 4
      3          static infrared_code_type infrared_code = {0,0,0,0};
   \                     infrared_code:
   \   00000000                      DS8 8
      4          

   \                                 In section .text, align 2, keep-with-next
      5          uint8 get_infrared_ready_flag()
      6          {
      7          	return infrared_code.ready_flag;
   \                     get_infrared_ready_flag: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x4770             BX       LR               ;; return
      8          }

   \                                 In section .text, align 2, keep-with-next
      9          uint16 get_infrared_device_id()
     10          {
     11              return infrared_code.device_id;
   \                     get_infrared_device_id: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000004   0x8840             LDRH     R0,[R0, #+2]
   \   00000006   0x4770             BX       LR               ;; return
     12          }

   \                                 In section .text, align 2, keep-with-next
     13          uint8 get_infrared_command()
     14          {  
     15              return infrared_code.command;
   \                     get_infrared_command: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000004   0x7900             LDRB     R0,[R0, #+4]
   \   00000006   0x4770             BX       LR               ;; return
     16          }

   \                                 In section .text, align 2, keep-with-next
     17          uint8 get_infrared_press_hold_flag()
     18          {
     19              return infrared_code.press_hold_flag;
   \                     get_infrared_press_hold_flag: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000004   0x7940             LDRB     R0,[R0, #+5]
   \   00000006   0x4770             BX       LR               ;; return
     20          }
     21          

   \                                 In section .text, align 2, keep-with-next
     22          uint8 get_infrared_coutinue_flag()
     23          {
     24              return infrared_code.coutinue_flag;
   \                     get_infrared_coutinue_flag: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000004   0x7980             LDRB     R0,[R0, #+6]
   \   00000006   0x4770             BX       LR               ;; return
     25          }
     26          

   \                                 In section .text, align 2, keep-with-next
     27          void reset_infrared_coutinue_flag()
     28          {
     29              infrared_code.coutinue_flag = 0;
   \                     reset_infrared_coutinue_flag: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable7
   \   00000006   0x7188             STRB     R0,[R1, #+6]
     30          }
   \   00000008   0x4770             BX       LR               ;; return
     31          

   \                                 In section .text, align 2, keep-with-next
     32          void reset_infrared()
     33          {
     34              infrared_code.ready_flag = 0;
   \                     reset_infrared: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable7
   \   00000006   0x7008             STRB     R0,[R1, #+0]
     35              infrared_code.device_id = 0;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable7
   \   0000000E   0x8048             STRH     R0,[R1, #+2]
     36              infrared_code.command = 0;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable7
   \   00000016   0x7108             STRB     R0,[R1, #+4]
     37              infrared_code.press_hold_flag = 0;
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable7
   \   0000001E   0x7148             STRB     R0,[R1, #+5]
     38              infrared_code.coutinue_flag = 0;
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable7
   \   00000026   0x7188             STRB     R0,[R1, #+6]
     39          }
   \   00000028   0x4770             BX       LR               ;; return
     40          

   \                                 In section .text, align 2, keep-with-next
     41          void infrared_decode()
     42          {
     43              static uint8 state = INFRARED_WAIT;
     44              static uint8 recheck_flag = 0;//作为长按时的重复编码检测标志
     45              static uint8 coutinue_time;
     46              static uint32 time = 0,current_time = 0,d_time = 0,recent_received_time = 0; //time阶段事件时刻 current当前时间 
     47              static uint32 data = 0;
     48              static uint32 data_former;//用于长按时的重复编码核对
     49              static uint8 bit_num = 0;
     50              current_time = GET_TIME_MS;//0.1ms为单位
   \                     infrared_decode: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   0000000A   0x6008             STR      R0,[R1, #+0]
     51              d_time = current_time - time;
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable7_3
   \   00000016   0x6809             LDR      R1,[R1, #+0]
   \   00000018   0x1A40             SUBS     R0,R0,R1
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable7_4
   \   0000001E   0x6008             STR      R0,[R1, #+0]
     52              switch(state)
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable7_5
   \   00000024   0x7800             LDRB     R0,[R0, #+0]
   \   00000026   0x2800             CMP      R0,#+0
   \   00000028   0xD015             BEQ.N    ??infrared_decode_0
   \   0000002A   0x2801             CMP      R0,#+1
   \   0000002C   0xD024             BEQ.N    ??infrared_decode_1
   \   0000002E   0x2803             CMP      R0,#+3
   \   00000030   0xD052             BEQ.N    ??infrared_decode_2
   \   00000032   0x2804             CMP      R0,#+4
   \   00000034   0xD061             BEQ.N    ??infrared_decode_3
   \   00000036   0x2805             CMP      R0,#+5
   \   00000038   0xF000 0x80AB      BEQ.W    ??infrared_decode_4
   \   0000003C   0x2806             CMP      R0,#+6
   \   0000003E   0xF000 0x80EB      BEQ.W    ??infrared_decode_5
   \   00000042   0x2807             CMP      R0,#+7
   \   00000044   0xF000 0x811D      BEQ.W    ??infrared_decode_6
   \   00000048   0x2808             CMP      R0,#+8
   \   0000004A   0xF000 0x812B      BEQ.W    ??infrared_decode_7
   \   0000004E   0x2809             CMP      R0,#+9
   \   00000050   0xF000 0x8135      BEQ.W    ??infrared_decode_8
   \   00000054   0xE149             B.N      ??infrared_decode_9
     53              {
     54                case INFRARED_WAIT:
     55                    if(d_time>BOOT_CODE_TIME1_MIN && d_time<BOOT_CODE_TIME1_MAX)//9ms
   \                     ??infrared_decode_0: (+1)
   \   00000056   0x....             LDR.N    R0,??DataTable7_4
   \   00000058   0x6800             LDR      R0,[R0, #+0]
   \   0000005A   0x3856             SUBS     R0,R0,#+86
   \   0000005C   0x2809             CMP      R0,#+9
   \   0000005E   0xD206             BCS.N    ??infrared_decode_10
     56                    {
     57                        time = current_time;
   \   00000060   0x....             LDR.N    R0,??DataTable7_2
   \   00000062   0x6800             LDR      R0,[R0, #+0]
   \   00000064   0x....             LDR.N    R1,??DataTable7_3
   \   00000066   0x6008             STR      R0,[R1, #+0]
     58                        state = INFRARED_ACTIVE;
   \   00000068   0x2001             MOVS     R0,#+1
   \   0000006A   0x....             LDR.N    R1,??DataTable7_5
   \   0000006C   0x7008             STRB     R0,[R1, #+0]
     59                    }
     60                    time = current_time;//100us为单位
   \                     ??infrared_decode_10: (+1)
   \   0000006E   0x....             LDR.N    R0,??DataTable7_2
   \   00000070   0x6800             LDR      R0,[R0, #+0]
   \   00000072   0x....             LDR.N    R1,??DataTable7_3
   \   00000074   0x6008             STR      R0,[R1, #+0]
     61                    break;
   \   00000076   0xE138             B.N      ??infrared_decode_9
     62                case INFRARED_ACTIVE:
     63                    if(d_time>BOOT_CODE_TIME2_MIN && d_time<BOOT_CODE_TIME2_MAX)//4.5ms
   \                     ??infrared_decode_1: (+1)
   \   00000078   0x....             LDR.N    R0,??DataTable7_4
   \   0000007A   0x6800             LDR      R0,[R0, #+0]
   \   0000007C   0x3829             SUBS     R0,R0,#+41
   \   0000007E   0x2809             CMP      R0,#+9
   \   00000080   0xD20D             BCS.N    ??infrared_decode_11
     64                    {
     65                        time = current_time;
   \   00000082   0x....             LDR.N    R0,??DataTable7_2
   \   00000084   0x6800             LDR      R0,[R0, #+0]
   \   00000086   0x....             LDR.N    R1,??DataTable7_3
   \   00000088   0x6008             STR      R0,[R1, #+0]
     66                        bit_num = 0; //解码计数位清零
   \   0000008A   0x2000             MOVS     R0,#+0
   \   0000008C   0x....             LDR.N    R1,??DataTable7_6
   \   0000008E   0x7008             STRB     R0,[R1, #+0]
     67                        infrared_code.coutinue_flag = 1;
   \   00000090   0x2001             MOVS     R0,#+1
   \   00000092   0x....             LDR.N    R1,??DataTable7
   \   00000094   0x7188             STRB     R0,[R1, #+6]
     68                        state = INFRARED_DECODE1;//开始解码
   \   00000096   0x2003             MOVS     R0,#+3
   \   00000098   0x....             LDR.N    R1,??DataTable7_5
   \   0000009A   0x7008             STRB     R0,[R1, #+0]
   \   0000009C   0xE01B             B.N      ??infrared_decode_12
     69                    }
     70                    else if(d_time>COUTINUE_BOOT_TIME_MIN && d_time<COUTINUE_BOOT_TIME_MAX)//2.25ms
   \                     ??infrared_decode_11: (+1)
   \   0000009E   0x....             LDR.N    R0,??DataTable7_4
   \   000000A0   0x6800             LDR      R0,[R0, #+0]
   \   000000A2   0x3815             SUBS     R0,R0,#+21
   \   000000A4   0x2804             CMP      R0,#+4
   \   000000A6   0xD213             BCS.N    ??infrared_decode_13
     71                    {
     72                        if(current_time-recent_received_time>FIRST_COUTINUE_TIME_MIN&&current_time-recent_received_time<FIRST_COUTINUE_TIME_MAX)//40ms  确认第一个连续信号
   \   000000A8   0x....             LDR.N    R0,??DataTable7_2
   \   000000AA   0x6800             LDR      R0,[R0, #+0]
   \   000000AC   0x....             LDR.N    R1,??DataTable7_7
   \   000000AE   0x6809             LDR      R1,[R1, #+0]
   \   000000B0   0x1A40             SUBS     R0,R0,R1
   \   000000B2   0xF2A0 0x10FF      SUBW     R0,R0,#+511
   \   000000B6   0x2809             CMP      R0,#+9
   \   000000B8   0xD206             BCS.N    ??infrared_decode_14
     73                        {
     74                            state = CONTINUE_CONFIRM;//如果不舍弃第一个连续信号则 进入COUTINUE_CONFIRM
   \   000000BA   0x2009             MOVS     R0,#+9
   \   000000BC   0x....             LDR.N    R1,??DataTable7_5
   \   000000BE   0x7008             STRB     R0,[R1, #+0]
     75                            coutinue_time = 0;//连续信号开始计数
   \   000000C0   0x2000             MOVS     R0,#+0
   \   000000C2   0x....             LDR.N    R1,??DataTable7_8
   \   000000C4   0x7008             STRB     R0,[R1, #+0]
   \   000000C6   0xE006             B.N      ??infrared_decode_12
     76                        }
     77                        else //过时的连续信号不响应
     78                        {
     79                            state = INFRARED_WAIT;
   \                     ??infrared_decode_14: (+1)
   \   000000C8   0x2000             MOVS     R0,#+0
   \   000000CA   0x....             LDR.N    R1,??DataTable7_5
   \   000000CC   0x7008             STRB     R0,[R1, #+0]
   \   000000CE   0xE002             B.N      ??infrared_decode_12
     80                        }
     81                    }
     82                    else//干扰信号
     83                    {
     84                        state = INFRARED_WAIT;
   \                     ??infrared_decode_13: (+1)
   \   000000D0   0x2000             MOVS     R0,#+0
   \   000000D2   0x....             LDR.N    R1,??DataTable7_5
   \   000000D4   0x7008             STRB     R0,[R1, #+0]
     85                    }
     86                    break;
   \                     ??infrared_decode_12: (+1)
   \   000000D6   0xE108             B.N      ??infrared_decode_9
     87                case INFRARED_DECODE1:
     88                    if(d_time>DATA_SHORT_TIME_MIN&&d_time<DATA_SHORT_TIME_MAX)//0.56ms  实测为0.6ms
   \                     ??infrared_decode_2: (+1)
   \   000000D8   0x....             LDR.N    R0,??DataTable7_4
   \   000000DA   0x6800             LDR      R0,[R0, #+0]
   \   000000DC   0x1E80             SUBS     R0,R0,#+2
   \   000000DE   0x2809             CMP      R0,#+9
   \   000000E0   0xD207             BCS.N    ??infrared_decode_15
     89                    {
     90                        time = current_time;
   \   000000E2   0x....             LDR.N    R0,??DataTable7_2
   \   000000E4   0x6800             LDR      R0,[R0, #+0]
   \   000000E6   0x....             LDR.N    R1,??DataTable7_3
   \   000000E8   0x6008             STR      R0,[R1, #+0]
     91                        state = INFRARED_DECODE2;
   \   000000EA   0x2004             MOVS     R0,#+4
   \   000000EC   0x....             LDR.N    R1,??DataTable7_5
   \   000000EE   0x7008             STRB     R0,[R1, #+0]
   \   000000F0   0xE002             B.N      ??infrared_decode_16
     92                    }
     93                    else//干扰信号
     94                    {
     95                        state = INFRARED_WAIT;
   \                     ??infrared_decode_15: (+1)
   \   000000F2   0x2000             MOVS     R0,#+0
   \   000000F4   0x....             LDR.N    R1,??DataTable7_5
   \   000000F6   0x7008             STRB     R0,[R1, #+0]
     96                    }
     97                    break;
   \                     ??infrared_decode_16: (+1)
   \   000000F8   0xE0F7             B.N      ??infrared_decode_9
     98                case INFRARED_DECODE2:
     99                    if(d_time>DATA_SHORT_TIME_MIN&&d_time<DATA_SHORT_TIME_MAX)//0.56ms  实测为0.6ms
   \                     ??infrared_decode_3: (+1)
   \   000000FA   0x....             LDR.N    R0,??DataTable7_4
   \   000000FC   0x6800             LDR      R0,[R0, #+0]
   \   000000FE   0x1E80             SUBS     R0,R0,#+2
   \   00000100   0x2809             CMP      R0,#+9
   \   00000102   0xD21E             BCS.N    ??infrared_decode_17
    100                    {
    101                        time = current_time;
   \   00000104   0x....             LDR.N    R0,??DataTable7_2
   \   00000106   0x6800             LDR      R0,[R0, #+0]
   \   00000108   0x....             LDR.N    R1,??DataTable7_3
   \   0000010A   0x6008             STR      R0,[R1, #+0]
    102                        data &= 0x7FFFFFFF;//最高位置0
   \   0000010C   0x....             LDR.N    R0,??DataTable7_9
   \   0000010E   0x6800             LDR      R0,[R0, #+0]
   \   00000110   0xF020 0x4000      BIC      R0,R0,#0x80000000
   \   00000114   0x....             LDR.N    R1,??DataTable7_9
   \   00000116   0x6008             STR      R0,[R1, #+0]
    103                        data>>=1;
   \   00000118   0x....             LDR.N    R0,??DataTable7_9
   \   0000011A   0x6800             LDR      R0,[R0, #+0]
   \   0000011C   0x0840             LSRS     R0,R0,#+1
   \   0000011E   0x....             LDR.N    R1,??DataTable7_9
   \   00000120   0x6008             STR      R0,[R1, #+0]
    104                        state = INFRARED_DECODE1;
   \   00000122   0x2003             MOVS     R0,#+3
   \   00000124   0x....             LDR.N    R1,??DataTable7_5
   \   00000126   0x7008             STRB     R0,[R1, #+0]
    105                        bit_num++;
   \   00000128   0x....             LDR.N    R0,??DataTable7_6
   \   0000012A   0x7800             LDRB     R0,[R0, #+0]
   \   0000012C   0x1C40             ADDS     R0,R0,#+1
   \   0000012E   0x....             LDR.N    R1,??DataTable7_6
   \   00000130   0x7008             STRB     R0,[R1, #+0]
    106                        if(bit_num==32)
   \   00000132   0x....             LDR.N    R0,??DataTable7_6
   \   00000134   0x7800             LDRB     R0,[R0, #+0]
   \   00000136   0x2820             CMP      R0,#+32
   \   00000138   0xD12A             BNE.N    ??infrared_decode_18
    107                        {
    108                            state = INFRARED_CHECK;//解码结束 开始校正
   \   0000013A   0x2005             MOVS     R0,#+5
   \   0000013C   0x....             LDR.N    R1,??DataTable7_5
   \   0000013E   0x7008             STRB     R0,[R1, #+0]
   \   00000140   0xE026             B.N      ??infrared_decode_18
    109                        }
    110                    }
    111                    else if(d_time>DATA_LONG_TIME_MIN && d_time<DATA_LONG_TIME_MAX)//1.68ms
   \                     ??infrared_decode_17: (+1)
   \   00000142   0x....             LDR.N    R0,??DataTable7_4
   \   00000144   0x6800             LDR      R0,[R0, #+0]
   \   00000146   0x380D             SUBS     R0,R0,#+13
   \   00000148   0x2809             CMP      R0,#+9
   \   0000014A   0xD21E             BCS.N    ??infrared_decode_19
    112                    {
    113                        time = current_time;
   \   0000014C   0x....             LDR.N    R0,??DataTable7_2
   \   0000014E   0x6800             LDR      R0,[R0, #+0]
   \   00000150   0x....             LDR.N    R1,??DataTable7_3
   \   00000152   0x6008             STR      R0,[R1, #+0]
    114                        data |= 0x80000000;//最高位置1
   \   00000154   0x....             LDR.N    R0,??DataTable7_9
   \   00000156   0x6800             LDR      R0,[R0, #+0]
   \   00000158   0xF050 0x4000      ORRS     R0,R0,#0x80000000
   \   0000015C   0x....             LDR.N    R1,??DataTable7_9
   \   0000015E   0x6008             STR      R0,[R1, #+0]
    115                        data>>=1;
   \   00000160   0x....             LDR.N    R0,??DataTable7_9
   \   00000162   0x6800             LDR      R0,[R0, #+0]
   \   00000164   0x0840             LSRS     R0,R0,#+1
   \   00000166   0x....             LDR.N    R1,??DataTable7_9
   \   00000168   0x6008             STR      R0,[R1, #+0]
    116                        state = INFRARED_DECODE1;
   \   0000016A   0x2003             MOVS     R0,#+3
   \   0000016C   0x....             LDR.N    R1,??DataTable7_5
   \   0000016E   0x7008             STRB     R0,[R1, #+0]
    117                        bit_num++;
   \   00000170   0x....             LDR.N    R0,??DataTable7_6
   \   00000172   0x7800             LDRB     R0,[R0, #+0]
   \   00000174   0x1C40             ADDS     R0,R0,#+1
   \   00000176   0x....             LDR.N    R1,??DataTable7_6
   \   00000178   0x7008             STRB     R0,[R1, #+0]
    118                        if(bit_num==32)
   \   0000017A   0x....             LDR.N    R0,??DataTable7_6
   \   0000017C   0x7800             LDRB     R0,[R0, #+0]
   \   0000017E   0x2820             CMP      R0,#+32
   \   00000180   0xD106             BNE.N    ??infrared_decode_18
    119                        {
    120                            state = INFRARED_CHECK;//解码结束 开始校正
   \   00000182   0x2005             MOVS     R0,#+5
   \   00000184   0x....             LDR.N    R1,??DataTable7_5
   \   00000186   0x7008             STRB     R0,[R1, #+0]
   \   00000188   0xE002             B.N      ??infrared_decode_18
    121                        }
    122                    }
    123                    else//干扰信号
    124                    {
    125                        state = INFRARED_WAIT;
   \                     ??infrared_decode_19: (+1)
   \   0000018A   0x2000             MOVS     R0,#+0
   \   0000018C   0x....             LDR.N    R1,??DataTable7_5
   \   0000018E   0x7008             STRB     R0,[R1, #+0]
    126                    }
    127                    break;
   \                     ??infrared_decode_18: (+1)
   \   00000190   0xE0AB             B.N      ??infrared_decode_9
    128                case INFRARED_CHECK://可以加一个0.56ms核对
    129                    if(recheck_flag == 0)//正常编码核对
   \                     ??infrared_decode_4: (+1)
   \   00000192   0x....             LDR.N    R0,??DataTable7_10
   \   00000194   0x7800             LDRB     R0,[R0, #+0]
   \   00000196   0x2800             CMP      R0,#+0
   \   00000198   0xD12A             BNE.N    ??infrared_decode_20
    130                    {
    131                        if(((data<<8)&0xFF000000)^(data&0xFF000000)==0xFF000000)//数据正确接收  这里可以不再判断时间是否为 0.56ms
   \   0000019A   0x....             LDR.N    R0,??DataTable7_9
   \   0000019C   0x6800             LDR      R0,[R0, #+0]
   \   0000019E   0xF010 0x407F      ANDS     R0,R0,#0xFF000000
   \   000001A2   0xF1B0 0x4F7F      CMP      R0,#-16777216
   \   000001A6   0xD101             BNE.N    ??infrared_decode_21
   \   000001A8   0x2001             MOVS     R0,#+1
   \   000001AA   0xE000             B.N      ??infrared_decode_22
   \                     ??infrared_decode_21: (+1)
   \   000001AC   0x2000             MOVS     R0,#+0
   \                     ??infrared_decode_22: (+1)
   \   000001AE   0x....             LDR.N    R1,??DataTable7_9
   \   000001B0   0x6809             LDR      R1,[R1, #+0]
   \   000001B2   0x0209             LSLS     R1,R1,#+8
   \   000001B4   0xF011 0x417F      ANDS     R1,R1,#0xFF000000
   \   000001B8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001BA   0xEA90 0x0F01      TEQ      R0,R1
   \   000001BE   0xD012             BEQ.N    ??infrared_decode_23
    132                        {
    133                            recent_received_time = time;
   \   000001C0   0x....             LDR.N    R0,??DataTable7_3
   \   000001C2   0x6800             LDR      R0,[R0, #+0]
   \   000001C4   0x....             LDR.N    R1,??DataTable7_7
   \   000001C6   0x6008             STR      R0,[R1, #+0]
    134                            infrared_code.ready_flag = 1;
   \   000001C8   0x2001             MOVS     R0,#+1
   \   000001CA   0x....             LDR.N    R1,??DataTable7
   \   000001CC   0x7008             STRB     R0,[R1, #+0]
    135                            infrared_code.device_id = (uint16)data&0x0000FFFF;
   \   000001CE   0x....             LDR.N    R0,??DataTable7_9
   \   000001D0   0x6800             LDR      R0,[R0, #+0]
   \   000001D2   0x....             LDR.N    R1,??DataTable7
   \   000001D4   0x8048             STRH     R0,[R1, #+2]
    136                            infrared_code.command = (uint16)((data&0x00FF0000)>>16);
   \   000001D6   0x....             LDR.N    R0,??DataTable7_9
   \   000001D8   0x6800             LDR      R0,[R0, #+0]
   \   000001DA   0x0C00             LSRS     R0,R0,#+16
   \   000001DC   0x....             LDR.N    R1,??DataTable7
   \   000001DE   0x7108             STRB     R0,[R1, #+4]
    137                            infrared_code.coutinue_flag = 1;//指示长按尚未结束
   \   000001E0   0x2001             MOVS     R0,#+1
   \   000001E2   0x....             LDR.N    R1,??DataTable7
   \   000001E4   0x7188             STRB     R0,[R1, #+6]
    138                        }
    139                        else//数据出错
    140                        {
    141                            //printf("device ID = %d\n",(int)data&0x0000FFFF);
    142                            //printf("data error\n");
    143                        }
    144                        data_former = data;
   \                     ??infrared_decode_23: (+1)
   \   000001E6   0x....             LDR.N    R0,??DataTable7_9
   \   000001E8   0x6800             LDR      R0,[R0, #+0]
   \   000001EA   0x....             LDR.N    R1,??DataTable7_11
   \   000001EC   0x6008             STR      R0,[R1, #+0]
   \   000001EE   0xE00F             B.N      ??infrared_decode_24
    145                    }
    146                    else//连续的重复编码核对
    147                    {
    148                        if(data == data_former)
   \                     ??infrared_decode_20: (+1)
   \   000001F0   0x....             LDR.N    R0,??DataTable7_9
   \   000001F2   0x6800             LDR      R0,[R0, #+0]
   \   000001F4   0x....             LDR.N    R1,??DataTable7_11
   \   000001F6   0x6809             LDR      R1,[R1, #+0]
   \   000001F8   0x4288             CMP      R0,R1
   \   000001FA   0xD106             BNE.N    ??infrared_decode_25
    149                        {
    150                            recent_received_time = time;
   \   000001FC   0x....             LDR.N    R0,??DataTable7_3
   \   000001FE   0x6800             LDR      R0,[R0, #+0]
   \   00000200   0x....             LDR.N    R1,??DataTable7_7
   \   00000202   0x6008             STR      R0,[R1, #+0]
    151                            infrared_code.coutinue_flag = 1;//指示长按尚未结束
   \   00000204   0x2001             MOVS     R0,#+1
   \   00000206   0x....             LDR.N    R1,??DataTable7
   \   00000208   0x7188             STRB     R0,[R1, #+6]
    152                        }
    153                        else//数据出错
    154                        {
    155                            //printf("device ID = %d\n",(int)data&0x0000FFFF);
    156                            //printf("data error\n");
    157                        }
    158                        recheck_flag = 0;
   \                     ??infrared_decode_25: (+1)
   \   0000020A   0x2000             MOVS     R0,#+0
   \   0000020C   0x....             LDR.N    R1,??DataTable7_10
   \   0000020E   0x7008             STRB     R0,[R1, #+0]
    159                    }
    160                    state = INFRARED_WAIT;//新的引导码以及 第一个连续信号 都是在INFRARED_WAIT中检测
   \                     ??infrared_decode_24: (+1)
   \   00000210   0x2000             MOVS     R0,#+0
   \   00000212   0x....             LDR.N    R1,??DataTable7_5
   \   00000214   0x7008             STRB     R0,[R1, #+0]
    161                    break;
   \   00000216   0xE068             B.N      ??infrared_decode_9
    162                case COUTINUE_WAIT:
    163                    if(coutinue_time<COUTINUE_TIME_NUM&&d_time>COUTINUE_TIME_MIN&&d_time<COUTINUE_TIME_MAX)//98ms
   \                     ??infrared_decode_5: (+1)
   \   00000218   0x....             LDR.N    R0,??DataTable7_8
   \   0000021A   0x7800             LDRB     R0,[R0, #+0]
   \   0000021C   0x2809             CMP      R0,#+9
   \   0000021E   0xDA0D             BGE.N    ??infrared_decode_26
   \   00000220   0x....             LDR.N    R0,??DataTable7_4
   \   00000222   0x6800             LDR      R0,[R0, #+0]
   \   00000224   0xF2A0 0x30C9      SUBW     R0,R0,#+969
   \   00000228   0x2809             CMP      R0,#+9
   \   0000022A   0xD207             BCS.N    ??infrared_decode_26
    164                    {
    165                        time = current_time;
   \   0000022C   0x....             LDR.N    R0,??DataTable7_2
   \   0000022E   0x6800             LDR      R0,[R0, #+0]
   \   00000230   0x....             LDR.N    R1,??DataTable7_3
   \   00000232   0x6008             STR      R0,[R1, #+0]
    166                        state = CONTINUE_ACTIVE;
   \   00000234   0x2007             MOVS     R0,#+7
   \   00000236   0x....             LDR.N    R1,??DataTable7_5
   \   00000238   0x7008             STRB     R0,[R1, #+0]
   \   0000023A   0xE021             B.N      ??infrared_decode_27
    167                    }
    168                    else if(coutinue_time==COUTINUE_TIME_NUM&&d_time>COUTINUE_NEXT_MIN&&d_time<COUTINUE_NEXT_MAX)//紧接连续信号的下一个重复编码 或者 噪声   也可以通过连续信号个数coutinue_time的最大值来判断
   \                     ??infrared_decode_26: (+1)
   \   0000023C   0x....             LDR.N    R0,??DataTable7_8
   \   0000023E   0x7800             LDRB     R0,[R0, #+0]
   \   00000240   0x2809             CMP      R0,#+9
   \   00000242   0xD111             BNE.N    ??infrared_decode_28
   \   00000244   0x....             LDR.N    R0,??DataTable7_4
   \   00000246   0x6800             LDR      R0,[R0, #+0]
   \   00000248   0xF2A0 0x2059      SUBW     R0,R0,#+601
   \   0000024C   0xF5B0 0x7FB7      CMP      R0,#+366
   \   00000250   0xD80A             BHI.N    ??infrared_decode_28
    169                    {
    170                        time = current_time;
   \   00000252   0x....             LDR.N    R0,??DataTable7_2
   \   00000254   0x6800             LDR      R0,[R0, #+0]
   \   00000256   0x....             LDR.N    R1,??DataTable7_3
   \   00000258   0x6008             STR      R0,[R1, #+0]
    171                        recheck_flag = 1;//准备核对编码 排除意外干扰
   \   0000025A   0x2001             MOVS     R0,#+1
   \   0000025C   0x....             LDR.N    R1,??DataTable7_10
   \   0000025E   0x7008             STRB     R0,[R1, #+0]
    172                        state = INFRARED_WAIT;
   \   00000260   0x2000             MOVS     R0,#+0
   \   00000262   0x....             LDR.N    R1,??DataTable7_5
   \   00000264   0x7008             STRB     R0,[R1, #+0]
   \   00000266   0xE00B             B.N      ??infrared_decode_27
    173                    }
    174                    else if(d_time<COUTINUE_NEXT_MIN)
   \                     ??infrared_decode_28: (+1)
   \   00000268   0x....             LDR.N    R0,??DataTable7_4
   \   0000026A   0x6800             LDR      R0,[R0, #+0]
   \   0000026C   0xF5B0 0x7F16      CMP      R0,#+600
   \   00000270   0xD306             BCC.N    ??infrared_decode_27
    175                    {
    176                        //直接跳过中间干扰信号 考虑到干扰信号一般会有一个下降沿一个上升沿 间隔时间很短 可以设置其他去干扰算法
    177                    }
    178                    else//超时连续终止 也可能是下一次信号的引导码
    179                    {
    180                        time = current_time;//保证不错过新数据的引导码
   \   00000272   0x....             LDR.N    R0,??DataTable7_2
   \   00000274   0x6800             LDR      R0,[R0, #+0]
   \   00000276   0x....             LDR.N    R1,??DataTable7_3
   \   00000278   0x6008             STR      R0,[R1, #+0]
    181                        state = INFRARED_WAIT;
   \   0000027A   0x2000             MOVS     R0,#+0
   \   0000027C   0x....             LDR.N    R1,??DataTable7_5
   \   0000027E   0x7008             STRB     R0,[R1, #+0]
    182                    }
    183                    break;
   \                     ??infrared_decode_27: (+1)
   \   00000280   0xE033             B.N      ??infrared_decode_9
    184                case CONTINUE_ACTIVE:
    185                    if(d_time>BOOT_CODE_TIME1_MIN&&d_time<BOOT_CODE_TIME1_MAX)//9ms
   \                     ??infrared_decode_6: (+1)
   \   00000282   0x....             LDR.N    R0,??DataTable7_4
   \   00000284   0x6800             LDR      R0,[R0, #+0]
   \   00000286   0x3856             SUBS     R0,R0,#+86
   \   00000288   0x2809             CMP      R0,#+9
   \   0000028A   0xD207             BCS.N    ??infrared_decode_29
    186                    {
    187                        time = current_time;
   \   0000028C   0x....             LDR.N    R0,??DataTable7_2
   \   0000028E   0x6800             LDR      R0,[R0, #+0]
   \   00000290   0x....             LDR.N    R1,??DataTable7_3
   \   00000292   0x6008             STR      R0,[R1, #+0]
    188                        state = CONTINUE_START;
   \   00000294   0x2008             MOVS     R0,#+8
   \   00000296   0x....             LDR.N    R1,??DataTable7_5
   \   00000298   0x7008             STRB     R0,[R1, #+0]
   \   0000029A   0xE002             B.N      ??infrared_decode_30
    189                    }
    190                    else//干扰信号
    191                    {
    192                        state = INFRARED_WAIT;
   \                     ??infrared_decode_29: (+1)
   \   0000029C   0x2000             MOVS     R0,#+0
   \   0000029E   0x....             LDR.N    R1,??DataTable7_5
   \   000002A0   0x7008             STRB     R0,[R1, #+0]
    193                    }
    194                    break;
   \                     ??infrared_decode_30: (+1)
   \   000002A2   0xE022             B.N      ??infrared_decode_9
    195                case CONTINUE_START:
    196                    if(d_time>COUTINUE_BOOT_TIME_MIN&&d_time<COUTINUE_BOOT_TIME_MAX)//2.25ms
   \                     ??infrared_decode_7: (+1)
   \   000002A4   0x....             LDR.N    R0,??DataTable7_4
   \   000002A6   0x6800             LDR      R0,[R0, #+0]
   \   000002A8   0x3815             SUBS     R0,R0,#+21
   \   000002AA   0x2804             CMP      R0,#+4
   \   000002AC   0xD203             BCS.N    ??infrared_decode_31
    197                    {
    198                        state = CONTINUE_CONFIRM;
   \   000002AE   0x2009             MOVS     R0,#+9
   \   000002B0   0x....             LDR.N    R1,??DataTable7_5
   \   000002B2   0x7008             STRB     R0,[R1, #+0]
   \   000002B4   0xE002             B.N      ??infrared_decode_32
    199                    }
    200                    else//干扰信号
    201                    {
    202                        state = INFRARED_WAIT;
   \                     ??infrared_decode_31: (+1)
   \   000002B6   0x2000             MOVS     R0,#+0
   \   000002B8   0x....             LDR.N    R1,??DataTable7_5
   \   000002BA   0x7008             STRB     R0,[R1, #+0]
    203                    }
    204                    break;
   \                     ??infrared_decode_32: (+1)
   \   000002BC   0xE015             B.N      ??infrared_decode_9
    205                case CONTINUE_CONFIRM://可以加一个0.56ms核对
    206                    time = current_time;
   \                     ??infrared_decode_8: (+1)
   \   000002BE   0x....             LDR.N    R0,??DataTable7_2
   \   000002C0   0x6800             LDR      R0,[R0, #+0]
   \   000002C2   0x....             LDR.N    R1,??DataTable7_3
   \   000002C4   0x6008             STR      R0,[R1, #+0]
    207                    coutinue_time ++;//连续信号个数更新
   \   000002C6   0x....             LDR.N    R0,??DataTable7_8
   \   000002C8   0x7800             LDRB     R0,[R0, #+0]
   \   000002CA   0x1C40             ADDS     R0,R0,#+1
   \   000002CC   0x....             LDR.N    R1,??DataTable7_8
   \   000002CE   0x7008             STRB     R0,[R1, #+0]
    208                    if(coutinue_time == COUTINUE_TIME_THRESHOLD)//判断长按
   \   000002D0   0x....             LDR.N    R0,??DataTable7_8
   \   000002D2   0x7800             LDRB     R0,[R0, #+0]
   \   000002D4   0x2805             CMP      R0,#+5
   \   000002D6   0xD102             BNE.N    ??infrared_decode_33
    209                    {
    210                        infrared_code.press_hold_flag = 1;
   \   000002D8   0x2001             MOVS     R0,#+1
   \   000002DA   0x....             LDR.N    R1,??DataTable7
   \   000002DC   0x7148             STRB     R0,[R1, #+5]
    211                    }
    212                    infrared_code.coutinue_flag = 1;//指示长按尚未结束
   \                     ??infrared_decode_33: (+1)
   \   000002DE   0x2001             MOVS     R0,#+1
   \   000002E0   0x....             LDR.N    R1,??DataTable7
   \   000002E2   0x7188             STRB     R0,[R1, #+6]
    213                    state = COUTINUE_WAIT;//下一个连续信号等待
   \   000002E4   0x2006             MOVS     R0,#+6
   \   000002E6   0x....             LDR.N    R1,??DataTable7_5
   \   000002E8   0x7008             STRB     R0,[R1, #+0]
    214                    break;
    215              }
    216          }
   \                     ??infrared_decode_9: (+1)
   \   000002EA   0x4770             BX       LR               ;; return

   \                                 In section .bss, align 1
   \                     `infrared_decode::state`:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     `infrared_decode::recheck_flag`:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     `infrared_decode::coutinue_time`:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
   \                     `infrared_decode::time`:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     `infrared_decode::current_time`:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     `infrared_decode::d_time`:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     `infrared_decode::recent_received_time`:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     `infrared_decode::data`:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     `infrared_decode::data_former`:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
   \                     `infrared_decode::bit_num`:
   \   00000000                      DS8 1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x........         DC32     infrared_code

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x........         DC32     gul_time_100us

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x........         DC32     `infrared_decode::current_time`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x........         DC32     `infrared_decode::time`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0x........         DC32     `infrared_decode::d_time`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   0x........         DC32     `infrared_decode::state`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   0x........         DC32     `infrared_decode::bit_num`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   0x........         DC32     `infrared_decode::recent_received_time`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \   00000000   0x........         DC32     `infrared_decode::coutinue_time`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_9:
   \   00000000   0x........         DC32     `infrared_decode::data`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_10:
   \   00000000   0x........         DC32     `infrared_decode::recheck_flag`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_11:
   \   00000000   0x........         DC32     `infrared_decode::data_former`

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   get_infrared_command
       0   get_infrared_coutinue_flag
       0   get_infrared_device_id
       0   get_infrared_press_hold_flag
       0   get_infrared_ready_flag
       0   infrared_decode
       0   reset_infrared
       0   reset_infrared_coutinue_flag


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_10
       4  ??DataTable7_11
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable7_8
       4  ??DataTable7_9
       1  bit_num
       1  coutinue_time
       4  current_time
       4  d_time
       4  data
       4  data_former
       8  get_infrared_command
       8  get_infrared_coutinue_flag
       8  get_infrared_device_id
       8  get_infrared_press_hold_flag
       8  get_infrared_ready_flag
       8  infrared_code
     748  infrared_decode
       4  recent_received_time
       1  recheck_flag
      42  reset_infrared
      10  reset_infrared_coutinue_flag
       1  state
       4  time

 
  36 bytes in section .bss
 888 bytes in section .text
 
 888 bytes of CODE memory
  36 bytes of DATA memory

Errors: none
Warnings: none
